{"version":3,"file":"index.ca9c37e4784f7e103588.js","mappings":"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","sources":["webpack://range-slider/webpack/runtime/chunk loaded","webpack://range-slider/./src/ConfigService/Config.ts","webpack://range-slider/./src/models/Ruler.ts","webpack://range-slider/./src/views/TrackView.ts","webpack://range-slider/./src/views/ThumbView.ts","webpack://range-slider/./src/views/FillView.ts","webpack://range-slider/./src/views/RangeSliderView.ts","webpack://range-slider/./src/models/RangeSlider.ts","webpack://range-slider/./src/presenters/Mediator.ts","webpack://range-slider/./src/presenters/RangeSliderPresenter.ts","webpack://range-slider/./src/presenters/TrackPresenter.ts","webpack://range-slider/./src/models/TrackModel.ts","webpack://range-slider/./src/models/ThumbModel.ts","webpack://range-slider/./src/EventDispatcher.ts","webpack://range-slider/./src/presenters/ThumbPresenter.ts","webpack://range-slider/./src/models/FillModel.ts","webpack://range-slider/./src/presenters/FillPresenter.ts","webpack://range-slider/./src/range-slider-plugin/range-slider-plugin.ts","webpack://range-slider/./src/Dashboard.ts","webpack://range-slider/./src/index.ts","webpack://range-slider/webpack/bootstrap","webpack://range-slider/webpack/runtime/compat get default export","webpack://range-slider/webpack/runtime/define property getters","webpack://range-slider/webpack/runtime/hasOwnProperty shorthand","webpack://range-slider/webpack/runtime/jsonp chunk loading","webpack://range-slider/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { IConfig } from \"../types/IConfigurationService/IConfig\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport cloneDeep from \"lodash/cloneDeep\";\r\n\r\nexport class Config implements IConfig {\r\n  private userOptions?: IOptions;\r\n  private container?: Element;\r\n  private containerWidth?: number;\r\n  private containerHeight?: number;\r\n  private containerViewportLeft?: number;\r\n  private containerViewportTop?: number;\r\n  private static instance: Config;\r\n  private static instances: Config[] = [];\r\n  private static instanceId: number = 0;\r\n  private instanceId: number;\r\n  private defaultOptions: IOptions = {\r\n    orientation: \"horizontal\",\r\n    min: 0,\r\n    max: 100,\r\n    value: 0,\r\n    step: 1,\r\n    trackHeight: 6,\r\n    fill: true,\r\n    tooltip: true,\r\n    tooltipForm: \"square\",\r\n    thumbSize: 15,\r\n    doublePoint: false,\r\n    label: true,\r\n    labelStyles: {\r\n      height: 20,\r\n      marginTop: 10,\r\n      marginBottom: 30\r\n    },\r\n    labelString: \"Range-Slider\",\r\n    valueInLabel: true,\r\n    ticks: true,\r\n    maxTicks: 20,\r\n    tickBar: true,\r\n    tickFontSize: 11,\r\n    thumbColor: \"#E65837FF\",\r\n    thumbShadow: true,\r\n    thumbAnimation: true,\r\n    trackColor: \"#E5E5E5FF\",\r\n    fillColor: \"#E65837FF\",\r\n    tooltipColor: \"#E65837FF\",\r\n    rulerColor: \"#C4C4C4FF\"\r\n  };\r\n  private constructor(options?: IOptions, container?: HTMLElement) {\r\n    Config.instanceId++;\r\n    this.instanceId = Config.instanceId;\r\n    this.userOptions = options;\r\n    this.container = container;\r\n    container?.setAttribute(\"data-id\", `${this.instanceId}`);\r\n  }\r\n  public static set(container: HTMLElement, options?: IOptions): Config {\r\n    if (!options?.instanceId) {\r\n      Config.instance = new Config(options, container);\r\n      Config.instances.push(Config.instance);\r\n    } else {\r\n      throw new Error(\"This instance is already set\");\r\n    }\r\n    return Config.instance;\r\n  }\r\n  public static getInstance(): Config {\r\n    return Config.instance;\r\n  }\r\n  public static getInstanceById(instanceId: number): Config {\r\n    return Config.instances[instanceId - 1];\r\n  }\r\n\r\n  private getCurrentContainerProportions(): number {\r\n    let max = this.userOptions?.max\r\n      ? (this.userOptions.max as number)\r\n      : this.defaultOptions.max;\r\n    let min = this.userOptions?.min\r\n      ? (this.userOptions.min as number)\r\n      : this.defaultOptions.min;\r\n    (max = max as number), (min = min as number);\r\n    const proportion = this.getCurrentOrientationValue() / (max - min);\r\n    return proportion;\r\n  }\r\n  private getCurrentOrientationValue(): number {\r\n    return this.userOptions?.orientation &&\r\n      this.userOptions?.orientation == \"horizontal\"\r\n      ? this.getContainerSize().containerWidth\r\n      : this.getPluginHeight();\r\n  }\r\n  private getContainerSize(): {\r\n    containerHeight: number;\r\n    containerWidth: number;\r\n  } {\r\n    if (this.container) {\r\n      this.containerWidth = parseInt(getComputedStyle(this.container).width);\r\n      this.containerHeight = parseInt(getComputedStyle(this.container).height);\r\n    }\r\n    return {\r\n      containerHeight: this.containerHeight as number,\r\n      containerWidth: this.containerWidth as number\r\n    };\r\n  }\r\n  private getLabelHeight(): number {\r\n    const labelHeight = this.defaultOptions.labelStyles\r\n      ? this.defaultOptions.labelStyles.height +\r\n        this.defaultOptions.labelStyles.marginBottom +\r\n        this.defaultOptions.labelStyles.marginTop\r\n      : this.containerHeight;\r\n    return labelHeight as number;\r\n  }\r\n  private getPluginHeight(): number {\r\n    return this.getContainerSize().containerHeight - this.getLabelHeight();\r\n  }\r\n  private decorateUserOptions(options: IOptions): IOptions {\r\n    if (this.container) {\r\n      options.containerWidth = this.getContainerSize().containerWidth;\r\n      options.containerHeight = this.getContainerSize().containerHeight;\r\n\r\n      options.pluginHeight = this.getPluginHeight();\r\n      options.instanceId = this.instanceId;\r\n      options.containerProportion = this.getCurrentContainerProportions();\r\n\r\n      return options;\r\n    }\r\n    return options;\r\n  }\r\n  public updateOptions(opt: IOptions): void {\r\n    this.userOptions = Object.assign({}, this.userOptions, opt);\r\n    // console.log(Config.instances);\r\n  }\r\n  public updateOptionsExact(config: Config, opt: IOptions): void {\r\n    config.userOptions = Object.assign({}, config.userOptions, opt);\r\n  }\r\n  // public updateOptions(opt: IOptions): void {\r\n  //   this.userOptions = cloneDeep(opt);\r\n  // }\r\n\r\n  public static getConfigObjectById(id: number): {\r\n    pluginId: number;\r\n    config: Config;\r\n  } {\r\n    return {\r\n      pluginId: id,\r\n      config: Config.instances[id]\r\n    };\r\n  }\r\n  getOptions(): IOptions {\r\n    return this.userOptions\r\n      ? Object.assign(\r\n          {},\r\n          this.defaultOptions,\r\n          this.decorateUserOptions(this.userOptions)\r\n        )\r\n      : this.defaultOptions;\r\n  }\r\n}\r\n","import { Config } from \"../ConfigService/Config\";\r\nimport { IOptions } from \"../components/components\";\r\nimport { IRuler } from \"../types/IModels/IRuler\";\r\n\r\nexport class Ruler implements IRuler {\r\n  private options: IOptions;\r\n  private max: number = 0;\r\n  private min: number = 0;\r\n  private maxTicks: number = 0;\r\n  private tickStep: number = 0;\r\n  private tickFontSize: number = 0;\r\n  private static id: number = 0;\r\n  private id: number = 0;\r\n  private thumbSize: number = 0;\r\n  constructor() {\r\n    Ruler.id++;\r\n    this.id = Ruler.id;\r\n    this.options = Config.getInstance().getOptions();\r\n    this.thumbSize = this.options.thumbSize as number;\r\n    this.tickFontSize = this.options.tickFontSize as number;\r\n    this.maxTicks =\r\n      this.options.orientation === \"horizontal\"\r\n        ? (this.options.maxTicks as number) ?? 10\r\n        : (this.options.maxTicks as number) ?? 20;\r\n\r\n    this.init();\r\n  }\r\n\r\n  init(): void {\r\n    this.max = this.options.max as number;\r\n    this.min = this.options.min as number;\r\n    this.thumbSize = this.options.thumbSize as number;\r\n    this.tickStep = this.options.tickStep\r\n      ? this.options.tickStep\r\n      : this.getCalculatedTickStep();\r\n    this.renderRuler();\r\n   \r\n  }\r\n  setMaxTicks(max: number): void {\r\n    this.maxTicks = max;\r\n  }\r\n \r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n\r\n    this.tickFontSize = (this.options.tickFontSize as number) ?? 11;\r\n    this.maxTicks =\r\n      this.options.orientation === \"horizontal\"\r\n        ? (this.options.maxTicks as number) ?? 10\r\n        : (this.options.maxTicks as number) ?? 20;\r\n  }\r\n  setMax(max: number): void {\r\n    this.max = max;\r\n  }\r\n  getCalculatedTickStep(): number {\r\n    let tickStep: number = 1;\r\n    const significantNum = this.removeTrailingZeros(this.max).num;\r\n    const significantNumTickstep = this.max / significantNum;\r\n\r\n    if (\r\n      this.isValidPartition(significantNumTickstep, this.max) &&\r\n      this.min == 0\r\n    ) {\r\n      tickStep = significantNumTickstep;\r\n    } else {\r\n      const validTicksSteps: number[] = this.getValidTickStepsArr(this.max);\r\n      tickStep = this.getFavorableTickStep(validTicksSteps, this.max);\r\n    }\r\n\r\n    return tickStep;\r\n  }\r\n  isFirstDigitPlain(num: number): boolean {\r\n    return this.removeTrailingZeros(num).num / 10 < 1;\r\n  }\r\n\r\n  getValidMultipliers(max: number): number[] {\r\n    const multipliers: number[] = [];\r\n    const sqrtMax = Math.sqrt(max);\r\n\r\n    for (let i = 1; i <= sqrtMax; i++) {\r\n      if (max % i === 0) {\r\n        multipliers.push(i);\r\n        if (i !== max / i && i !== 1) {\r\n          multipliers.push(max / i);\r\n        }\r\n      }\r\n    }\r\n\r\n    return multipliers.sort((a, b) => a - b);\r\n  }\r\n\r\n  isValidPartition(tickStep: number, max: number): boolean {\r\n    const partitions = max / tickStep;\r\n    const result =\r\n      partitions <= this.maxTicks && partitions >= 6 && max % tickStep == 0;\r\n    return result;\r\n  }\r\n\r\n  getFavorableTickStep(validTicksSteps: number[], max: number): number {\r\n    let result: number | undefined = undefined;\r\n    let isMinTickStep: boolean = false;\r\n\r\n    for (const tick of validTicksSteps) {\r\n      if (tick === this.min) {\r\n        isMinTickStep = true;\r\n        result = tick;\r\n        break;\r\n      }\r\n    }\r\n    if (!isMinTickStep) {\r\n      for (const tick of validTicksSteps) {\r\n        if (this.isFirstDigitPlain(tick)) {\r\n          result = tick;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (result === undefined) {\r\n      result = validTicksSteps.find((num) => max / num === 10);\r\n    }\r\n\r\n    return (\r\n      result ?? validTicksSteps[Math.round(validTicksSteps.length / 2) - 1]\r\n    );\r\n  }\r\n\r\n  getValidTickStepsArr(max: number): number[] {\r\n    const tickStep: number = 1;\r\n    let validTicksSteps: number[] = [];\r\n    const magnitudes = this.getValidMultipliers(max);\r\n\r\n    for (const magnitude of magnitudes) {\r\n      const newTickStep = tickStep * magnitude;\r\n\r\n      if (this.isValidPartition(newTickStep, max)) {\r\n        validTicksSteps.push(newTickStep);\r\n      }\r\n    }\r\n    validTicksSteps = validTicksSteps.filter((t) => t >= this.min);\r\n\r\n    return validTicksSteps;\r\n  }\r\n\r\n  removeTrailingZeros(num: number): { num: number; grade: number } {\r\n    let grade: number = 0;\r\n    if (num === 0) return { num: 0, grade: 0 };\r\n    while (num % 10 === 0 && num !== 0) {\r\n      grade++;\r\n      num /= 10;\r\n    }\r\n    return {\r\n      num: num,\r\n      grade: grade\r\n    };\r\n  }\r\n\r\n  validateIfTickStepMismatch(num: number): number {\r\n    let result: number | undefined;\r\n    let diff: number;\r\n    if (num > this.min && num - this.tickStep < this.min) {\r\n      diff = this.tickStep - this.min;\r\n      result = diff;\r\n    } else if (num < this.max && num + this.tickStep > this.max) {\r\n      diff = num + this.tickStep - this.max;\r\n      result = this.tickStep - diff;\r\n    }\r\n    return result ?? this.tickStep;\r\n  }\r\n  renderRuler(): HTMLElement {\r\n    let $ruler = document.createElement(\"div\");\r\n\r\n    $ruler.setAttribute(\r\n      \"class\",\r\n      `range-slider__ruler range-slider__ruler--${this.options.orientation} `\r\n    );\r\n    let rulerPadding = (this.options.thumbSize as number) / 2;\r\n    if (this.options.orientation === \"horizontal\") {\r\n      $ruler.style.width = `100%`;\r\n\r\n      $ruler.style.paddingLeft = `${rulerPadding}px`;\r\n      $ruler.style.paddingRight = `${rulerPadding}px`;\r\n    } else {\r\n      $ruler.style.height = `100%`;\r\n      $ruler.style.paddingTop = `${rulerPadding}px`;\r\n      $ruler.style.paddingBottom = `${rulerPadding}px`;\r\n    }\r\n\r\n    let i: number, max: number;\r\n\r\n    let $rulerTicks = document.createElement(\"div\");\r\n    $rulerTicks.setAttribute(\"class\", \"range-slider__ruler-ticks\");\r\n\r\n    if (!this.options.reversedOrder) {\r\n      i = this.options.min as number;\r\n      max = this.options.max as number;\r\n\r\n      while (i <= max) {\r\n        let tick = this.renderEachTick(i);\r\n        $rulerTicks.appendChild(tick);\r\n        i += this.validateIfTickStepMismatch(i);\r\n      }\r\n    } else {\r\n      i = this.options.max as number;\r\n      let min = this.options.min as number;\r\n      while (i >= min) {\r\n        let tick = this.renderEachTick(i);\r\n        $rulerTicks.appendChild(tick);\r\n        i -= this.validateIfTickStepMismatch(i);\r\n      }\r\n    }\r\n\r\n    $ruler.appendChild($rulerTicks);\r\n    return $ruler;\r\n  }\r\n  private getRulerProportion(): number {\r\n    return this.options.orientation === \"horizontal\"\r\n      ? (this.options.containerWidth as number) / (this.max - this.min)\r\n      : (this.options.pluginHeight as number) / (this.max - this.min);\r\n  }\r\n\r\n  private getEachTickPercentPos(num: number): number {\r\n    return (\r\n      (this.getEachTickPixelPos(num) /\r\n        ((this.max - this.min) * this.getRulerProportion())) *\r\n      100\r\n    );\r\n  }\r\n  private getEachTickPixelPos(num: number): number {\r\n    const currentProportion = this.getRulerProportion();\r\n    return num * currentProportion - this.min * currentProportion;\r\n  }\r\n  private setEachTickStyle(i: number, tick: HTMLElement): void {\r\n    tick.style.position = \"absolute\";\r\n    if (!this.options.reversedOrder) {\r\n      if (this.options.orientation == \"horizontal\") {\r\n        tick.style.left = `${this.getEachTickPercentPos(i)}%`;\r\n      } else {\r\n        tick.style.top = `${this.getEachTickPercentPos(i)}%`;\r\n      }\r\n    } else {\r\n      if (this.options.orientation == \"horizontal\") {\r\n        tick.style.right = `${this.getEachTickPercentPos(i)}%`;\r\n      } else {\r\n        tick.style.bottom = `${this.getEachTickPercentPos(i)}%`;\r\n      }\r\n    }\r\n  }\r\n  renderEachTick(i: number): HTMLElement {\r\n    let tick = document.createElement(\"div\");\r\n    tick.setAttribute(\r\n      \"class\",\r\n      `range-slider__tick range-slider__tick--${this.options.orientation}`\r\n    );\r\n\r\n    this.setEachTickStyle(i, tick);\r\n\r\n    let tickBar = document.createElement(\"div\");\r\n    tickBar.setAttribute(\r\n      \"class\",\r\n      `range-slider__tick-bar range-slider__tick-bar--${this.options.orientation}`\r\n    );\r\n\r\n    let tickNumber = document.createElement(\"div\");\r\n    tickNumber.setAttribute(\r\n      \"class\",\r\n      `range-slider__tick-number range-slider__tick-number--${this.options.orientation}`\r\n    );\r\n    tickNumber.style.fontSize = `${this.tickFontSize}px`;\r\n    if (this.options.tickBar) {\r\n      tick.appendChild(tickBar);\r\n    }\r\n\r\n    tick.appendChild(tickNumber);\r\n    tickNumber.innerHTML = i.toString();\r\n    tick.style.setProperty(\"--tick-color\", `${this.options.rulerColor}`);\r\n\r\n    return tick;\r\n  }\r\n}\r\n","import { ITrackView } from \"../types/IViews/ITrackView\";\r\nimport { Config } from \"../ConfigService/Config\";\r\nimport { IOptions, LabelStyles } from \"../components/components\";\r\nimport { Ruler } from \"../models/Ruler\";\r\n\r\nexport class TrackView implements ITrackView {\r\n  private $element: HTMLElement;\r\n  private $track: HTMLElement;\r\n  private options: IOptions;\r\n  private ruler!: Ruler;\r\n\r\n  constructor(parentElement: HTMLElement) {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.$element = parentElement;\r\n    this.$track = document.createElement(\"div\");\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    if (!this.ruler && this.options.ticks) {\r\n      this.ruler = new Ruler();\r\n    } else {\r\n      this.ruler.updateOptions(this.options.instanceId as number);\r\n    }\r\n    let orientClass: string = `range-slider__track--${this.options.orientation}`;\r\n    this.$track.setAttribute(\"class\", `range-slider__track ${orientClass}`);\r\n  }\r\n\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  getTrackElement(): HTMLElement {\r\n    return this.$track;\r\n  }\r\n\r\n  render(width: number, height: number, tickStep: number): void {\r\n    const min = this.options.min as number;\r\n    this.$element.appendChild(this.$track);\r\n\r\n    const labelStyles = this.options.labelStyles as LabelStyles;\r\n    const subtractLabelHeight =\r\n      labelStyles.height + labelStyles.marginBottom + labelStyles.marginTop;\r\n\r\n    if (this.options.orientation === \"horizontal\") {\r\n      this.$track.style.width = `${width}px`;\r\n      this.$track.style.height = `${this.options.trackHeight}px`;\r\n    } else {\r\n      this.$track.style.width = `${this.options.trackHeight}px`;\r\n      this.$track.style.height = `${\r\n        (this.options.containerHeight as number) - subtractLabelHeight\r\n      }px`;\r\n    }\r\n\r\n    this.$track.style.setProperty(\r\n      \"--track-color\",\r\n      `${this.options.trackColor}`\r\n    );\r\n\r\n    if (this.options.trackBorder) {\r\n      this.$track.style.setProperty(\r\n        \"border\",\r\n        `1px solid ${this.options.trackBorderColor}`\r\n      );\r\n    } else {\r\n      this.$track.style.setProperty(\"border\", \"none\");\r\n    }\r\n\r\n    if (this.options.ticks && this.ruler) {\r\n      this.$track.innerHTML = \"\";\r\n\r\n      this.$track.appendChild(this.ruler.renderRuler());\r\n    } else {\r\n      this.$track.innerHTML = \"\";\r\n    }\r\n  }\r\n\r\n  addPositionChangeListener(listener: Function): void {\r\n    this.$element.addEventListener(\"click\", (e) => {\r\n      listener(e);\r\n    });\r\n  }\r\n  getRuler(): Ruler {\r\n    return this.ruler;\r\n  }\r\n}\r\n","import { IThumbView } from \"../types/IViews/IThumbView\";\r\nimport { IOptions } from \"../components/components\";\r\nimport { Config } from \"../components/components\";\r\n\r\ntype NumberOrArray = number | number[];\r\n\r\nexport class ThumbView implements IThumbView {\r\n  private $thumb: HTMLElement;\r\n  private $parent: HTMLElement;\r\n  private $tooltip!: HTMLElement;\r\n  public static id: number = 1;\r\n  private id!: number;\r\n  private static idBuffer: number[] = [];\r\n  public dragging: boolean = false;\r\n  public isActive: boolean = false;\r\n  private options: IOptions;\r\n\r\n  constructor(parentElement: HTMLElement) {\r\n    this.options = Config.getInstance().getOptions();\r\n\r\n    if (this.options.doublePoint) {\r\n      if (ThumbView.idBuffer.length == 0 || ThumbView.id > 2) {\r\n        ThumbView.id = 1;\r\n      }\r\n      ThumbView.idBuffer.push(ThumbView.id);\r\n    } else {\r\n      ThumbView.id = 1;\r\n      ThumbView.idBuffer = [];\r\n    }\r\n\r\n    this.id = ThumbView.id;\r\n    this.$parent = parentElement;\r\n    this.$thumb = document.createElement(\"div\");\r\n    this.init();\r\n    ThumbView.id++;\r\n  }\r\n  init(): void {\r\n    const draggingClass = this.isActive ? ` dragging` : \"\";\r\n    this.$thumb.setAttribute(\r\n      \"class\",\r\n      `range-slider__thumb range-slider__thumb--${this.options.orientation} thumb-${this.id}${draggingClass}`\r\n    );\r\n    this.$thumb.dataset.id = this.id.toString();\r\n    this.$thumb.dataset.value = \"0\";\r\n    this.$parent.innerHTML = \"\";\r\n    this.$parent.appendChild(this.$thumb);\r\n    this.$thumb.innerHTML = \"\";\r\n\r\n    if (this.options.tooltip) {\r\n      this.$tooltip = this.getTooltip();\r\n      this.$thumb.appendChild(this.$tooltip);\r\n      this.applyTooltipStyle();\r\n    } else {\r\n      this.$thumb.innerHTML = \"\";\r\n    }\r\n  }\r\n\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  getTooltip(): HTMLElement {\r\n    const tooltip = document.createElement(\"div\");\r\n    let tooltipFormClass: string = `tooltip-${this.options.tooltipForm}` ?? \"\";\r\n    tooltip.setAttribute(\r\n      \"class\",\r\n      `range-slider__tooltip range-slider__tooltip--${this.options.orientation} tooltip-${this.id} ${tooltipFormClass}`\r\n    );\r\n    return tooltip;\r\n  }\r\n\r\n  applyTooltipStyle(): void {\r\n    if (this.$tooltip) {\r\n      this.$tooltip.style.setProperty(\r\n        \"--tooltip-color\",\r\n        this.options.tooltipColor as string\r\n      );\r\n    }\r\n  }\r\n\r\n  render(\r\n    position: NumberOrArray,\r\n    value: NumberOrArray,\r\n    stringValue?: string | string[]\r\n  ): void {\r\n    if (this.options.thumbAnimation) {\r\n      this.applyThumbAnimatingStyles(this.$thumb);\r\n    } else {\r\n      this.thumbAnimationOff(this.$thumb);\r\n    }\r\n\r\n    this.applyThumbStyles(this.$thumb);\r\n\r\n    const updateTooltipContent = () => {\r\n      if (Array.isArray(position) && Array.isArray(value)) {\r\n        const thisId: number = this.id - 1;\r\n        if (this.options.tooltip) {\r\n          if (stringValue) {\r\n            this.$tooltip.innerHTML = `${stringValue[thisId]}`;\r\n          } else {\r\n            this.$tooltip.innerHTML = `${value[thisId]}`;\r\n          }\r\n        }\r\n      } else {\r\n        if (this.options.tooltip) {\r\n          if (stringValue) {\r\n            this.$tooltip.innerHTML = `${stringValue as string}`;\r\n          } else {\r\n            this.$tooltip.innerHTML = `${value}`;\r\n          }\r\n        }\r\n      }\r\n    };\r\n    if (this.options.thumbAnimation) {\r\n      requestAnimationFrame(() => {\r\n        this.setOrientationPos(position);\r\n        updateTooltipContent();\r\n      });\r\n    } else {\r\n      this.setOrientationPos(position);\r\n      updateTooltipContent();\r\n    }\r\n  }\r\n\r\n  private applyThumbAnimatingStyles(el: HTMLElement): void {\r\n    el.style.transition = \"all 0.4s\";\r\n  }\r\n  private thumbAnimationOff(el: HTMLElement): void {\r\n    el.style.transition = \"none\";\r\n  }\r\n  private applyThumbStyles(thumb: HTMLElement): void {\r\n    thumb.style.width = `${this.options.thumbSize}px`;\r\n    thumb.style.height = `${this.options.thumbSize}px`;\r\n    const thumbSize = this.options.thumbSize as number;\r\n    const trackHeight = this.options.trackHeight as number;\r\n    if (this.options.orientation === \"horizontal\") {\r\n      thumb.style.top = `-${thumbSize / 2 - trackHeight / 2}px`;\r\n    } else {\r\n      thumb.style.left = `-${thumbSize / 2 - trackHeight / 2}px`;\r\n    }\r\n\r\n    thumb.style.setProperty(\"--thumb-color\", `${this.options.thumbColor}`);\r\n\r\n    if (this.options.thumbBorder) {\r\n      thumb.style.setProperty(\r\n        \"--thumb-border\",\r\n        `${this.options.thumbBorderStyle}`\r\n      );\r\n    } else {\r\n      thumb.style.setProperty(\"--thumb-border\", `none`);\r\n    }\r\n\r\n    if (this.options.thumbShadow) {\r\n      this.$thumb.style.setProperty(\"--thumb-shadow\", \"block\");\r\n      this.$thumb.style.setProperty(\r\n        \"--thumb-shadow-color\",\r\n        (this.options.thumbShadowColor as string) ||\r\n          (this.options.thumbColor as string)\r\n      );\r\n    } else {\r\n      this.$thumb.style.setProperty(\"--thumb-shadow\", \"none\");\r\n    }\r\n  }\r\n  setOrientationPos(position: number | number[]): void {\r\n    const thisId: number = this.id - 1;\r\n    if (this.options.orientation === \"horizontal\") {\r\n      if (Array.isArray(position)) {\r\n        this.$thumb.style.left = `${position[thisId]}px`;\r\n      } else {\r\n        this.$thumb.style.left = `${position}px`;\r\n      }\r\n    } else {\r\n      if (Array.isArray(position)) {\r\n        this.$thumb.style.top = `${position[thisId]}px`;\r\n      } else {\r\n        this.$thumb.style.top = `${position}px`;\r\n      }\r\n    }\r\n  }\r\n\r\n  getThumbViewId(): number {\r\n    return this.id;\r\n  }\r\n  addValueChangeListener(listener: Function): void {\r\n    this.$thumb.addEventListener(\"click\", () => {\r\n      // listener();\r\n    });\r\n  }\r\n  addStartDragListener(listener: Function): void {\r\n    this.$thumb.addEventListener(\"mousedown\", (e) => {\r\n      listener(e);\r\n    });\r\n  }\r\n  getThumbCurrentPosition(): number {\r\n    const pos: number =\r\n      this.options.orientation === \"horizontal\"\r\n        ? parseFloat(this.$thumb.style.left)\r\n        : parseFloat(this.$thumb.style.top);\r\n    return pos;\r\n  }\r\n\r\n  getThumbElement(): HTMLElement {\r\n    return this.$thumb;\r\n  }\r\n  getTooltipElement(): HTMLElement {\r\n    return this.$tooltip as HTMLElement;\r\n  }\r\n}\r\n","import { IFillView } from \"../types/IViews/IFillView\";\r\nimport { Config } from \"../ConfigService/Config\";\r\nimport { IOptions } from \"components/components\";\r\nexport class FillView implements IFillView {\r\n  private $fill!: HTMLElement;\r\n  private $parent: HTMLElement;\r\n  private options: IOptions;\r\n\r\n  constructor(parent: HTMLElement) {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.$parent = parent;\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    this.$fill = document.createElement(\"div\");\r\n    this.$fill.setAttribute(\r\n      \"class\",\r\n      `range-slider__fill range-slider__fill--${this.options.orientation}`\r\n    );\r\n  }\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    if (this.$fill) {\r\n      this.init();\r\n    }\r\n  }\r\n  render(position: number | number[], width: number): void {\r\n    if (this.options.fill && this.$fill) {\r\n      this.$parent.appendChild(this.$fill);\r\n\r\n      if (this.options.thumbAnimation) {\r\n        this.applyFillAnimatingStyle(this.$fill);\r\n      } else {\r\n        this.fillAnimationOff(this.$fill);\r\n      }\r\n\r\n      const fillRender = () => {\r\n        if (this.options.orientation === \"horizontal\") {\r\n          this.renderHorizontal(position, width);\r\n        } else {\r\n          this.renderVertical(position, width);\r\n        }\r\n\r\n        this.$fill!.style.setProperty(\r\n          \"--fill-color\",\r\n          `${this.options.fillColor}`\r\n        );\r\n      };\r\n      if (this.options.thumbAnimation) {\r\n        requestAnimationFrame(() => {\r\n          fillRender();\r\n        });\r\n      } else {\r\n        fillRender();\r\n      }\r\n    }\r\n  }\r\n\r\n  private renderHorizontal(position: number | number[], width: number): void {\r\n    this.$fill!.style.marginTop = \"0\";\r\n\r\n    if (Array.isArray(position)) {\r\n      this.$fill!.style.marginLeft = `${position[0]}px`;\r\n      this.$fill!.style.width = `${width}px`;\r\n      this.$fill!.style.height = `${this.options.trackHeight as number}px`;\r\n    } else {\r\n      if (!this.options.reversedOrder) {\r\n        this.$fill!.style.marginLeft = `0`;\r\n        this.$fill!.style.width = `${width}px`;\r\n        this.$fill!.style.height = `${this.options.trackHeight as number}px`;\r\n      } else {\r\n        this.$fill!.style.marginLeft = `${position}px`;\r\n        this.$fill!.style.width = `${width}px`;\r\n        this.$fill!.style.height = `${this.options.trackHeight as number}px`;\r\n      }\r\n    }\r\n  }\r\n\r\n  private renderVertical(position: number | number[], width: number): void {\r\n    if (Array.isArray(position)) {\r\n      this.$fill!.style.marginLeft = `0`;\r\n      this.$fill!.style.marginTop = `${position[0]}px`;\r\n      this.$fill!.style.height = `${width}px`;\r\n      this.$fill!.style.width = `${this.options.trackHeight as number}px`;\r\n    } else {\r\n      if (!this.options.reversedOrder) {\r\n        this.$fill!.style.marginLeft = `0`;\r\n        this.$fill!.style.marginTop = `0`;\r\n        this.$fill!.style.height = `${width}px`;\r\n        this.$fill!.style.width = `${this.options.trackHeight as number}px`;\r\n      } else {\r\n        this.$fill!.style.marginTop = `${position}px`;\r\n        this.$fill!.style.marginLeft = `0`;\r\n        this.$fill!.style.height = `${width}px`;\r\n        this.$fill!.style.width = `${this.options.trackHeight as number}px`;\r\n      }\r\n    }\r\n  }\r\n\r\n  private applyFillAnimatingStyle(fill: HTMLElement): void {\r\n    fill.style.transition = \"all 0.4s\";\r\n  }\r\n  private fillAnimationOff(fill: HTMLElement): void {\r\n    fill.style.transition = \"none\";\r\n  }\r\n  getFillElement(): HTMLElement {\r\n    return this.$fill;\r\n  }\r\n}\r\n","import { IRangeSliderView } from \"../types/IViews/IRangeSliderView\";\r\nimport { TrackView } from \"./TrackView\";\r\nimport { ThumbView } from \"./ThumbView\";\r\nimport { FillView } from \"./FillView\";\r\nimport { IOptions, LabelStyles } from \"../types/IConfigurationService/IOptions\";\r\nimport { Config } from \"../ConfigService/Config\";\r\n\r\nexport class RangeSliderView implements IRangeSliderView {\r\n  private $container: HTMLElement;\r\n  private $pluginElement: HTMLElement;\r\n  private $trackView!: TrackView;\r\n  private $label: HTMLElement;\r\n  private $title: HTMLElement;\r\n  private $thumbView!: ThumbView | ThumbView[];\r\n  private $trackElement!: HTMLElement;\r\n  private $fillView!: FillView;\r\n  private options: IOptions;\r\n\r\n  constructor(container: HTMLElement) {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.$container = container;\r\n    this.$pluginElement = document.createElement(\"div\");\r\n    this.$label = document.createElement(\"div\");\r\n    this.$title = document.createElement(\"h1\");\r\n    this.$trackView = new TrackView(this.$pluginElement);\r\n    this.$thumbView = this.getThumbViews();\r\n    this.$fillView = new FillView(this.$trackView.getTrackElement());\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    const classStr: string = `range-slider--${this.options.orientation}`;\r\n    this.$pluginElement.setAttribute(\"class\", `range-slider ${classStr}`);\r\n    this.$label.setAttribute(\"class\", \"range-slider__label\");\r\n    // this.renderLabel();\r\n    // this.render();\r\n  }\r\n\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n\r\n  getThumbViews(): ThumbView | ThumbView[] {\r\n    if (!this.options.doublePoint) {\r\n      return new ThumbView(this.$pluginElement) as ThumbView;\r\n    } else {\r\n      const thumbs = [];\r\n      for (let i = 1; i <= 2; i++) {\r\n        thumbs.push(new ThumbView(this.$pluginElement));\r\n      }\r\n      return thumbs as ThumbView[];\r\n    }\r\n  }\r\n\r\n  private renderLabel(value: number | number[]): void {\r\n    const valueStr = this.options.labelString ? this.options.labelString : \"\";\r\n    if (this.options.label && valueStr) {\r\n      const inner = this.options.valueInLabel\r\n        ? `${valueStr} -- ${value}`\r\n        : valueStr;\r\n      this.$label.textContent = inner;\r\n      const labelStyles = this.options.labelStyles as LabelStyles;\r\n      this.applyLabelStyles(labelStyles);\r\n      this.$container.appendChild(this.$label);\r\n    }\r\n  }\r\n\r\n  private applyLabelStyles(labelStyles: LabelStyles): void {\r\n    this.$label.style.height = `${labelStyles.height}px`;\r\n    this.$label.style.marginTop = `${labelStyles.marginTop}px`;\r\n    this.$label.style.marginBottom = `${labelStyles.marginBottom}px`;\r\n  }\r\n\r\n  render(value: number | number[]): void {\r\n    this.renderLabel(value);\r\n    this.$container.appendChild(this.$pluginElement);\r\n    this.$pluginElement.appendChild(this.$trackView.getTrackElement());\r\n    this.renderThumbView();\r\n  }\r\n\r\n  private renderThumbView(): void {\r\n    if (this.$thumbView instanceof ThumbView) {\r\n      this.$trackView\r\n        .getTrackElement()\r\n        .appendChild(this.$thumbView.getThumbElement());\r\n    } else if (Array.isArray(this.$thumbView)) {\r\n      this.$thumbView.forEach((view) =>\r\n        this.$trackView.getTrackElement().appendChild(view.getThumbElement())\r\n      );\r\n    }\r\n  }\r\n\r\n  getTrackView(): TrackView {\r\n    return this.$trackView;\r\n  }\r\n  getThumbView(): ThumbView | ThumbView[] {\r\n    if (this.$thumbView instanceof ThumbView) {\r\n      return this.$thumbView as ThumbView;\r\n    } else {\r\n      return this.$thumbView as ThumbView[];\r\n    }\r\n  }\r\n  getFillView(): FillView {\r\n    return this.$fillView;\r\n  }\r\n  addValueChangeListener(listener: Function): void {\r\n    this.$pluginElement.addEventListener(\"click\", () => {\r\n      listener();\r\n    });\r\n  }\r\n  getContainerWidth(): number {\r\n    return parseInt(getComputedStyle(this.$container).width);\r\n  }\r\n}\r\n","import { IRangeSlider } from \"../types/IModels/IRangeSlider\";\r\nimport { IObserver } from \"../types/IObserver\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Config } from \"../ConfigService/Config\";\r\nexport class RangeSlider implements IRangeSlider {\r\n  private value: number = 0;\r\n  private observers: IObserver[] = [];\r\n  private options!: IOptions;\r\n\r\n  constructor() {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.init();\r\n  }\r\n\r\n  init(): void {\r\n    this.value = this.options.value as number;\r\n    this.setValue(this.value);\r\n  }\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  setValue(value: number): void {\r\n    this.value = value;\r\n    this.notifyObservers();\r\n  }\r\n\r\n  getValue(): number {\r\n    return this.value;\r\n  }\r\n\r\n  addObserver(observer: IObserver): void {\r\n    this.observers.push(observer);\r\n  }\r\n\r\n  removeObserver(observer: IObserver): void {\r\n    this.observers = this.observers.filter((obs) => obs !== observer);\r\n  }\r\n\r\n  private notifyObservers(): void {\r\n    this.observers.forEach((observer) => {\r\n      observer.update(this.value);\r\n    });\r\n  }\r\n}\r\n","import { IMediator } from \"../types/IPresenters/IMediator\";\r\nimport { TrackPresenter } from \"./TrackPresenter\";\r\nimport { ThumbPresenter } from \"./ThumbPresenter\";\r\nimport { FillPresenter } from \"./FillPresenter\";\r\nexport class Mediator implements IMediator {\r\n  private trackPresenter: TrackPresenter;\r\n  private thumbPresenter: ThumbPresenter;\r\n  private fillPresenter: FillPresenter;\r\n\r\n  constructor(\r\n    trackPresenter: TrackPresenter,\r\n    thumbPresenter: ThumbPresenter,\r\n    fillPresenter: FillPresenter\r\n  ) {\r\n    this.trackPresenter = trackPresenter;\r\n    this.thumbPresenter = thumbPresenter;\r\n    this.fillPresenter = fillPresenter;\r\n  }\r\n  public getThumbPresenter(): ThumbPresenter {\r\n    return this.thumbPresenter;\r\n  }\r\n  public notifyTrackClick(clickPosition: number): void {\r\n    this.thumbPresenter.onTrackClick(clickPosition);\r\n  }\r\n\r\n  public notifyThumbPositionChange(position: number): void {\r\n    this.fillPresenter.onThumbPositionChange(position);\r\n  }\r\n  public notifyFillPosition(position: number | number[]): void {\r\n    this.fillPresenter.updateValue(position);\r\n  }\r\n  public getStartPointFromTrack(): { left: number; top: number } {\r\n    return this.trackPresenter.getTrackStartPoint();\r\n  }\r\n}\r\n","import { IPresenter } from \"../types/IPresenters/IPresenter\";\r\nimport { IRangeSlider } from \"../types/IModels/IRangeSlider\";\r\nimport { IRangeSliderView } from \"../types/IViews/IRangeSliderView\";\r\nimport { IObserver } from \"../types/IObserver\";\r\nimport { TrackPresenter } from \"./TrackPresenter\";\r\nimport { ThumbPresenter } from \"./ThumbPresenter\";\r\nimport { FillPresenter } from \"./FillPresenter\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Config } from \"../ConfigService/Config\";\r\nimport { Mediator } from \"./Mediator\";\r\n\r\ntype NumberOrArray = number | number[];\r\n\r\nexport class RangeSliderPresenter implements IPresenter, IObserver {\r\n  private mediator: Mediator;\r\n  private options: IOptions;\r\n\r\n  constructor(\r\n    private model: IRangeSlider,\r\n    private view: IRangeSliderView,\r\n    private trackPresenter: TrackPresenter,\r\n    private thumbPresenter: ThumbPresenter,\r\n    private fillPresenter: FillPresenter\r\n  ) {\r\n    this.model = model;\r\n    this.view = view;\r\n    this.trackPresenter = trackPresenter;\r\n    this.thumbPresenter = thumbPresenter;\r\n    this.fillPresenter = fillPresenter;\r\n    this.mediator = new Mediator(\r\n      this.trackPresenter,\r\n      this.thumbPresenter,\r\n      this.fillPresenter\r\n    );\r\n    this.options = Config.getInstance().getOptions();\r\n    this.init();\r\n  }\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    this.model.addObserver(this);\r\n    this.thumbPresenter.addObserver(this);\r\n    this.thumbPresenter.setMediator(this.mediator);\r\n    this.trackPresenter.setMediator(this.mediator);\r\n    this.fillPresenter.setMediator(this.mediator);\r\n\r\n    this.updateView();\r\n    const thumbPos: NumberOrArray =\r\n      this.thumbPresenter.getCurrentFillPosition();\r\n    this.fillPresenter.updateValue(thumbPos);\r\n    this.thumbPresenter.updateView();\r\n  }\r\n  getMediator(): Mediator {\r\n    return this.mediator;\r\n  }\r\n\r\n  update(value: NumberOrArray): void {\r\n    if (Array.isArray(value) && value[0] > value[1]) {\r\n      value = value.reverse();\r\n    }\r\n    this.view.render(value);\r\n  }\r\n\r\n  updateValue(value: number): void {\r\n    this.model.setValue(value);\r\n  }\r\n\r\n  private updateView(): void {\r\n    const value = this.model.getValue();\r\n    this.view.render(value);\r\n  }\r\n}\r\n","import { ITrackView } from \"../types/IViews/ITrackView\";\r\nimport { ITrackModel } from \"../types/IModels/ITrackModel\";\r\nimport { ITrackPresenter } from \"../types/IPresenters/ITrackPresenter\";\r\nimport { IObserver } from \"../types/IObserver\";\r\nimport { Mediator } from \"./Mediator\";\r\nimport { Config } from \"../ConfigService/Config\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Ruler } from \"../models/Ruler\";\r\n\r\nexport class TrackPresenter implements ITrackPresenter, IObserver {\r\n  private mediator?: Mediator;\r\n  private options: IOptions;\r\n  private ruler!: Ruler;\r\n  private tickStep!: number;\r\n  private $trackElement!: HTMLElement;\r\n\r\n  constructor(private trackModel: ITrackModel, private trackView: ITrackView) {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.trackModel = trackModel;\r\n    this.trackView = trackView;\r\n    this.init();\r\n  }\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    this.$trackElement = this.trackView.getTrackElement();\r\n    this.tickStep = this.options.tickStep\r\n      ? this.options.tickStep\r\n      : this.trackView.getRuler().getCalculatedTickStep();\r\n    this.trackModel.addObserver(this);\r\n    this.trackView.addPositionChangeListener(this.trackClickHandler.bind(this));\r\n    this.updateView();\r\n  }\r\n\r\n  update(clickPosition: number): void {\r\n    this.updateView();\r\n  }\r\n  private updateView(): void {\r\n    this.trackView.render(\r\n      this.trackModel.getWidth(),\r\n      this.trackModel.getHeight(),\r\n      this.tickStep\r\n    );\r\n  }\r\n\r\n  trackClickHandler(e: MouseEvent | TouchEvent): void {\r\n    if (e instanceof MouseEvent) {\r\n      const startPoint =\r\n        this.options.orientation === \"horizontal\"\r\n          ? this.$trackElement.getBoundingClientRect().left\r\n          : this.$trackElement.getBoundingClientRect().top;\r\n      let position: number =\r\n        this.options.orientation === \"horizontal\"\r\n          ? e.clientX - startPoint + (this.options.thumbSize as number) / 2\r\n          : e.clientY - startPoint + (this.options.thumbSize as number) / 2;\r\n\r\n      this.mediator?.notifyTrackClick(position);\r\n    }\r\n  }\r\n  setMediator(mediator?: Mediator): void {\r\n    if (mediator) this.mediator = mediator;\r\n  }\r\n  getTrackStartPoint(): { left: number; top: number } {\r\n    return {\r\n      left: this.$trackElement.getBoundingClientRect().left,\r\n      top: this.$trackElement.getBoundingClientRect().top\r\n    };\r\n  }\r\n}\r\n","import { ITrackModel } from \"../types/IModels/ITrackModel\";\r\nimport { IObserver } from \"../types/IObserver\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Config } from \"../ConfigService/Config\";\r\n\r\nexport class TrackModel implements ITrackModel {\r\n  private width!: number;\r\n  private height!: number;\r\n  private observers: IObserver[] = [];\r\n  private options: IOptions;\r\n\r\n  constructor() {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.init();\r\n  }\r\n\r\n  init(): void {\r\n    if (this.options.orientation === \"horizontal\") {\r\n      this.height = this.options.trackHeight as number;\r\n      this.width = this.options.containerWidth as number;\r\n    } else {\r\n      this.height = this.options.containerHeight as number;\r\n      this.width = this.options.trackHeight as number;\r\n    }\r\n  }\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  getWidth(): number {\r\n    return this.width;\r\n  }\r\n\r\n  setWidth(width: number): void {\r\n    this.width = width;\r\n  }\r\n\r\n  getHeight(): number {\r\n    return this.height;\r\n  }\r\n\r\n  setHeight(height: number): void {\r\n    this.height = height;\r\n  }\r\n  addObserver(observer: IObserver): void {\r\n    this.observers.push(observer);\r\n  }\r\n\r\n  removeObserver(observer: IObserver): void {\r\n    this.observers = this.observers.filter((obs) => obs !== observer);\r\n  }\r\n}\r\n","import { IObserver } from \"../types/IObserver\";\r\nimport { IThumbModel } from \"../types/IModels/IThumbModel\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Config } from \"../ConfigService/Config\";\r\n\r\ntype NumberOrArray = number | number[];\r\ntype ValuePosObject = { val: number | number[]; pos: number | number[] };\r\n\r\nexport class ThumbModel implements IThumbModel {\r\n  private position: NumberOrArray = 0;\r\n  private observers: IObserver[] = [];\r\n  private dragging: boolean = false;\r\n  private thumbSize: number = 0;\r\n  private min: number = 0;\r\n  private max: number = 0;\r\n  private value?: NumberOrArray;\r\n  private containerWidth: number = 0;\r\n  private containerHeight: number = 0;\r\n  private step: number = 0;\r\n  private options: IOptions;\r\n  private containerOrientationValue: number = 0;\r\n\r\n  constructor() {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.init();\r\n  }\r\n\r\n  init(): void {\r\n    this.min = this.options.min as number;\r\n    this.max = this.options.max as number;\r\n    this.step = this.validateStep(this.options.step as number);\r\n    this.thumbSize = this.options.thumbSize as number;\r\n    this.containerWidth = this.getContainerWidth() - this.thumbSize;\r\n    this.containerHeight = this.getContainerHeight() - this.thumbSize;\r\n    this.value = this.options.value ? this.options.value : this.min;\r\n\r\n    this.containerOrientationValue = this.setContainerOrientationValue();\r\n    this.position = this.setInitialPosition().pos;\r\n  }\r\n  validateAscendingArr(arr: NumberOrArray): NumberOrArray {\r\n    if (Array.isArray(arr)) {\r\n      if (arr[0] > arr[1]) {\r\n        return arr.reverse();\r\n      } else {\r\n        return arr;\r\n      }\r\n    } else return arr;\r\n  }\r\n\r\n  mergeWithPosition(pos: NumberOrArray): ValuePosObject {\r\n    const p: NumberOrArray = this.validateAscendingArr(pos);\r\n    const temp: NumberOrArray = !this.options.reversedOrder\r\n      ? this.convertToValue(pos)\r\n      : this.convertToValueReversed(pos);\r\n    const v: NumberOrArray = temp;\r\n    return { val: v, pos: p };\r\n  }\r\n\r\n  mergeWithValue(val: NumberOrArray): ValuePosObject {\r\n    const v: NumberOrArray = val;\r\n    const temp: NumberOrArray = !this.options.reversedOrder\r\n      ? this.convertToPosition(val)\r\n      : this.convertToPositionReversed(val);\r\n    const p: NumberOrArray = temp;\r\n    return { val: v, pos: p };\r\n  }\r\n\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  setContainerOrientationValue(): number {\r\n    return this.options.orientation === \"horizontal\"\r\n      ? this.containerWidth\r\n      : this.containerHeight;\r\n  }\r\n\r\n  setInitialPosition(): ValuePosObject {\r\n    return this.mergeWithValue(this.options.value as NumberOrArray);\r\n  }\r\n\r\n  getStep(): number {\r\n    return this.step * this.getProportion();\r\n  }\r\n\r\n  getThumbSize(): number {\r\n    return this.thumbSize;\r\n  }\r\n  getMin(): number {\r\n    return this.min;\r\n  }\r\n  getMax(): number {\r\n    return this.max;\r\n  }\r\n  getPosition(): NumberOrArray {\r\n    return this.position;\r\n  }\r\n  setPosition(position: NumberOrArray): void {\r\n    this.position = position;\r\n    this.value = this.mergeWithPosition(position).val;\r\n    this.notifyObservers();\r\n  }\r\n\r\n  setValue(value: NumberOrArray): void {\r\n    this.value = value;\r\n    this.position = this.mergeWithValue(value).pos;\r\n    this.notifyObservers();\r\n  }\r\n\r\n  convertToValueReversed(position: NumberOrArray): NumberOrArray {\r\n    const convertedVal = this.convertToValue(position);\r\n    if (Array.isArray(convertedVal)) {\r\n      return convertedVal.map((p) => this.getMax() - p + this.min);\r\n    } else {\r\n      return this.getMax() - convertedVal + this.min;\r\n    }\r\n  }\r\n  convertToValue(position: NumberOrArray): NumberOrArray {\r\n    if (Array.isArray(position)) {\r\n      return position.map((p) =>\r\n        Math.round(p / this.getProportion() + this.min)\r\n      );\r\n    } else if (position == 0) {\r\n      return position;\r\n    } else {\r\n      return Math.round(position / this.getProportion() + this.min);\r\n    }\r\n  }\r\n\r\n  convertToPosition(value: NumberOrArray): NumberOrArray {\r\n    const max = this.getMax();\r\n    const min = this.getMin();\r\n    if (Array.isArray(value)) {\r\n      return value.map(\r\n        (val) =>\r\n          (val / (max - min)) * this.containerOrientationValue -\r\n          min * this.getProportion()\r\n      );\r\n    } else if (value === 0 || value < min) {\r\n      return min;\r\n    } else {\r\n      const proportionValue =\r\n        (value / (max - min)) * this.containerOrientationValue -\r\n        min * this.getProportion();\r\n      return proportionValue;\r\n    }\r\n  }\r\n  convertToPositionReversed(value: NumberOrArray): NumberOrArray {\r\n    const proportionMax: number = this.convertToPosition(this.max) as number;\r\n    const proportionVal: NumberOrArray = this.convertToPosition(value);\r\n    let reverseVal: NumberOrArray;\r\n\r\n    if (Array.isArray(proportionVal)) {\r\n      reverseVal = proportionVal.map((val) => proportionMax - val);\r\n    } else {\r\n      reverseVal = proportionMax - proportionVal;\r\n    }\r\n    return reverseVal;\r\n  }\r\n\r\n  getValue(): NumberOrArray {\r\n    return this.value as NumberOrArray;\r\n  }\r\n  enableDrag(): void {\r\n    this.dragging = true;\r\n  }\r\n  get isDragging(): boolean {\r\n    return this.dragging;\r\n  }\r\n  disableDrag(): void {\r\n    this.dragging = false;\r\n  }\r\n  addObserver(observer: IObserver): void {\r\n    this.observers.push(observer);\r\n  }\r\n  getObservers(): IObserver[] {\r\n    return this.observers;\r\n  }\r\n\r\n  removeObserver(observer: IObserver): void {\r\n    this.observers = this.observers.filter((obs) => obs !== observer);\r\n  }\r\n  private notifyObservers(): void {\r\n    for (const observer of this.observers) {\r\n      if (Array.isArray(this.value)) {\r\n        this.value.forEach((val) => observer.update(val));\r\n      } else if (typeof this.value == \"number\") {\r\n        observer.update(this.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  getContainerWidth(): number {\r\n    return this.options.containerWidth as number;\r\n  }\r\n\r\n  getContainerHeight(): number {\r\n    return this.options.pluginHeight as number;\r\n  }\r\n\r\n  getProportion(): number {\r\n    const max = this.getMax();\r\n    const min = this.getMin();\r\n    const proportion = this.containerOrientationValue / (max - min);\r\n    return proportion;\r\n  }\r\n\r\n  getValueString(value: number | number[]): string | string[] | undefined {\r\n    let stringValue = \"\";\r\n    if (this.options.stringValues) {\r\n      const userStrings = this.options.stringValues as string[];\r\n      let parts: number = userStrings.length;\r\n      const splitArr = this.splitNum(this.max as number, parts);\r\n      if (Array.isArray(value)) {\r\n        const stringValueArr: string[] = [];\r\n\r\n        value.forEach((val) => {\r\n          let ranges = [0, ...splitArr];\r\n          for (let i = 0; i <= userStrings.length; i++) {\r\n            if (val >= ranges[i] && val <= ranges[i + 1]) {\r\n              stringValueArr.push(userStrings[i]);\r\n              break;\r\n            }\r\n          }\r\n        });\r\n        return stringValueArr;\r\n      } else {\r\n        let ranges = [0, ...splitArr];\r\n        for (let i = 0; i <= userStrings.length; i++) {\r\n          if (value >= ranges[i] && value <= ranges[i + 1]) {\r\n            stringValue = userStrings[i];\r\n            break;\r\n          }\r\n        }\r\n        return stringValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  splitNum(num: number, parts: number): number[] {\r\n    let splitArr: number[] = [];\r\n    let part = num / parts;\r\n    for (let i = 0; i <= parts - 1; i++) {\r\n      splitArr.push(part * (i + 1));\r\n    }\r\n    return splitArr;\r\n  }\r\n\r\n  validateStep(step: number): number {\r\n    if (step > this.max) {\r\n      step = this.max;\r\n    } else if (step < this.min && this.min == 0) {\r\n      step = this.min;\r\n    }\r\n    return step;\r\n  }\r\n}\r\n","import { IChangeEvent } from \"types/IChangeEvent\";\r\nexport class EventDispatcher {\r\n  private handlers: ((event: IChangeEvent) => void)[] = [];\r\n\r\n  addEventListener(callback: (event: IChangeEvent) => void) {\r\n    this.handlers.push(callback);\r\n  }\r\n\r\n  dispatchEvent(event: IChangeEvent) {\r\n    this.handlers.forEach((handler) => handler(event));\r\n  }\r\n}\r\n","import { IThumbPresenter } from \"../types/IPresenters/IThumbPresenter\";\r\nimport { IThumbModel } from \"../types/IModels/IThumbModel\";\r\nimport { IThumbView } from \"../types/IViews/IThumbView\";\r\nimport { IObserver } from \"../types/IObserver\";\r\nimport { ThumbView } from \"../views/ThumbView\";\r\nimport { Config } from \"../ConfigService/Config\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Mediator } from \"./Mediator\";\r\nimport { IChangeEvent } from \"../types/IChangeEvent\";\r\nimport { EventDispatcher } from \"../EventDispatcher\";\r\n\r\ntype NumberOrArray = number | number[];\r\n\r\nexport class ThumbPresenter implements IThumbPresenter, IObserver {\r\n  private model: IThumbModel;\r\n  private view: ThumbView | ThumbView[];\r\n  private mediator?: Mediator;\r\n  private position!: NumberOrArray;\r\n  private activeThumb?: HTMLElement;\r\n  private value!: NumberOrArray;\r\n  private dragBound!: EventListenerOrEventListenerObject;\r\n  private stopDragBound!: EventListenerOrEventListenerObject;\r\n  private observers: IObserver[] = [];\r\n  private options: IOptions;\r\n  private step!: number;\r\n  private isDoubleThumb!: boolean;\r\n  private eventDispatcher: EventDispatcher;\r\n  private changeEvent: IChangeEvent;\r\n  public startPoint?: number;\r\n\r\n  constructor(model: IThumbModel, view: ThumbView | ThumbView[]) {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.model = model;\r\n    this.view = view;\r\n    this.eventDispatcher = new EventDispatcher();\r\n    this.changeEvent = {};\r\n    this.model.addObserver(this);\r\n    this.addDragListeners(this);\r\n    this.init();\r\n  }\r\n\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    this.step = this.model.getStep();\r\n    this.position = this.model.getPosition();\r\n    this.value = this.model.getValue();\r\n    this.isDoubleThumb = this.isDouble;\r\n    this.model.setPosition(this.position);\r\n    this.updateView();\r\n  }\r\n\r\n  addDragListeners(context: ThumbPresenter): void {\r\n    if (this.view instanceof ThumbView) {\r\n      this.view.addStartDragListener(this.startDrag.bind(context));\r\n    } else if (Array.isArray(this.view)) {\r\n      this.view.forEach((thumbView) => {\r\n        thumbView.addStartDragListener(this.startDrag.bind(context));\r\n      });\r\n    }\r\n  }\r\n  getValue(): NumberOrArray {\r\n    return this.model.getValue();\r\n  }\r\n\r\n  get isDouble(): boolean {\r\n    return Array.isArray(this.view);\r\n  }\r\n  setMediator(mediator: Mediator): void {\r\n    if (mediator) this.mediator = mediator;\r\n  }\r\n\r\n  addObserver(observer: IObserver): void {\r\n    this.observers.push(observer);\r\n  }\r\n\r\n  private notifyObservers(): void {\r\n    for (const observer of this.observers) {\r\n      observer.update(this.model.getValue() as number);\r\n    }\r\n  }\r\n\r\n  update(value: number): void {\r\n    this.updateView();\r\n  }\r\n\r\n  updatePosition(value: NumberOrArray): void {\r\n    this.model.setPosition(value);\r\n  }\r\n\r\n  setThumbDataValue(thumb: ThumbView | ThumbView[]): void {\r\n    const currentVal: NumberOrArray = this.model.getValue();\r\n    const stringVal: string | string[] | undefined = this.options.stringValues\r\n      ? this.model.getValueString(currentVal)\r\n      : undefined;\r\n    if (thumb instanceof ThumbView && typeof currentVal == \"number\") {\r\n      if (!stringVal) {\r\n        thumb.getThumbElement().dataset.value = currentVal.toString();\r\n      } else {\r\n        thumb.getThumbElement().dataset.value = stringVal as string;\r\n      }\r\n    } else if (Array.isArray(thumb) && Array.isArray(currentVal)) {\r\n      if (!stringVal) {\r\n        for (let i = 0; i <= thumb.length - 1; i++) {\r\n          thumb[i].getThumbElement().dataset.value = currentVal[i].toString();\r\n        }\r\n      } else {\r\n        for (let i = 0; i <= thumb.length - 1; i++) {\r\n          thumb[i].getThumbElement().dataset.value = stringVal[i];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  updateView(): void {\r\n    let strVal = this.options.stringValues\r\n      ? this.model.getValueString(this.model.getValue())\r\n      : \"\";\r\n    if (this.view instanceof ThumbView) {\r\n      this.view.render(\r\n        this.model.getPosition(),\r\n        this.model.getValue(),\r\n        this.model.getValueString(this.model.getValue())\r\n      );\r\n    } else if (Array.isArray(this.view)) {\r\n      this.view.forEach((thumbView) =>\r\n        thumbView.render(\r\n          this.model.getPosition(),\r\n          this.model.getValue(),\r\n          this.model.getValueString(this.model.getValue())\r\n        )\r\n      );\r\n    }\r\n\r\n    this.setThumbDataValue(this.view);\r\n  }\r\n\r\n  public getCurrentPosition(): number | number[] {\r\n    return this.position;\r\n  }\r\n\r\n  public getCurrentFillPosition(): number | number[] {\r\n    let posArr: NumberOrArray = this.getCurrentPosition();\r\n    if (Array.isArray(posArr)) {\r\n      return [posArr[0], posArr[1]];\r\n    } else {\r\n      return posArr;\r\n    }\r\n  }\r\n\r\n  getTargetThumb(event: MouseEvent | TouchEvent): HTMLElement {\r\n    event.preventDefault();\r\n    let thumb: HTMLElement;\r\n    let eventTarget = event.target as HTMLElement;\r\n    if (eventTarget.classList.contains(\"range-slider__tooltip\")) {\r\n      thumb = eventTarget.closest(\".range-slider__thumb\") as HTMLElement;\r\n    } else {\r\n      thumb = eventTarget;\r\n    }\r\n    return thumb;\r\n  }\r\n\r\n  removeDraggingThumbClass(): void {\r\n    const thumbs = this.getThumbs();\r\n    if (!Array.isArray(thumbs)) {\r\n      thumbs.classList.remove(\"dragging\");\r\n    } else {\r\n      thumbs.forEach((thumb) => {\r\n        thumb.classList.remove(\"dragging\");\r\n      });\r\n    }\r\n  }\r\n\r\n  setDraggingThumbClass(activeThumb: HTMLElement): void {\r\n    activeThumb.classList.add(\"dragging\");\r\n  }\r\n\r\n  private startDrag(e: MouseEvent | TouchEvent): void {\r\n    this.activeThumb = this.getTargetThumb(e);\r\n\r\n    this.setActiveThumb(this.activeThumb);\r\n    this.model.enableDrag();\r\n    this.dragBound = this.drag.bind(this) as EventListener;\r\n    this.stopDragBound = this.stopDrag.bind(this) as EventListener;\r\n    document.addEventListener(\"mousemove\", this.dragBound);\r\n    document.addEventListener(\"touchmove\", this.dragBound);\r\n    document.addEventListener(\"mouseup\", this.stopDragBound);\r\n    document.addEventListener(\"touchend\", this.stopDragBound);\r\n  }\r\n\r\n  getThumbs(): HTMLElement | HTMLElement[] {\r\n    if (!Array.isArray(this.view)) {\r\n      return this.view.getThumbElement();\r\n    } else {\r\n      return this.view.map((v) => v.getThumbElement());\r\n    }\r\n  }\r\n  setActiveThumb(thumb: HTMLElement) {\r\n    if (!Array.isArray(this.view)) {\r\n      thumb.classList.add(\"active\");\r\n      this.view.isActive = true;\r\n    } else {\r\n      let thumbs = this.view.map((v) => v.getThumbElement());\r\n      thumbs.forEach((thumb) => thumb.classList.remove(\"active\"));\r\n      thumb.classList.add(\"active\");\r\n      this.view.forEach((v) => {\r\n        if (v.getThumbElement() === thumb) {\r\n          v.isActive = true;\r\n        } else {\r\n          v.isActive = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public getStartPointFromMediator(): number {\r\n    const obj = this.mediator?.getStartPointFromTrack() as {\r\n      left: number;\r\n      top: number;\r\n    };\r\n\r\n    const startPoint =\r\n      this.options.orientation === \"horizontal\" ? obj.left : obj.top;\r\n    return startPoint;\r\n  }\r\n\r\n  private drag(event: MouseEvent | TouchEvent): void {\r\n    const targetThumb = this.getTargetThumb(event);\r\n\r\n    this.setDraggingThumbClass(targetThumb);\r\n\r\n    const startPoint = this.getStartPointFromMediator();\r\n    event.preventDefault();\r\n    let currentPosition: number;\r\n\r\n    if (this.options.orientation === \"horizontal\") {\r\n      currentPosition =\r\n        event instanceof MouseEvent ? event.clientX : event.touches[0].clientX;\r\n    } else {\r\n      currentPosition =\r\n        event instanceof MouseEvent ? event.clientY : event.touches[0].clientY;\r\n    }\r\n\r\n    let movement = currentPosition - this.model.getThumbSize() / 2 - startPoint;\r\n\r\n    movement = this.setStep(movement);\r\n    movement = this.validateMinMax(movement);\r\n\r\n    if (Array.isArray(this.view) && this.options.doublePoint) {\r\n      let newPositionArr: number[] = this.setDoubleThumbPosition(\r\n        movement,\r\n        this.view\r\n      );\r\n\r\n      this.updatePosition(newPositionArr);\r\n      let fillThumbWidth = newPositionArr[1];\r\n      newPositionArr = [newPositionArr[0], fillThumbWidth];\r\n      this.mediator?.notifyFillPosition(newPositionArr);\r\n    } else {\r\n      this.updatePosition(movement);\r\n      this.mediator?.notifyFillPosition(movement);\r\n    }\r\n\r\n    this.notifyObservers();\r\n  }\r\n\r\n  externalSetValue(value: NumberOrArray): void {\r\n    if (Array.isArray(value) && this.options.reversedOrder) {\r\n      value = value.reverse();\r\n    }\r\n    this.model.setValue(value);\r\n\r\n    this.mediator?.notifyFillPosition(this.model.getPosition());\r\n    this.notifyObservers();\r\n  }\r\n\r\n  setStep(position: number): number {\r\n    if (this.model.getStep()) {\r\n      let step: number = this.model.getStep();\r\n      step = this.validateIfStepMismatch(position);\r\n      return Math.round(position / step) * step;\r\n    }\r\n    return position;\r\n  }\r\n\r\n  setDoubleThumbPosition(movement: number, viewArr: ThumbView[]): number[] {\r\n    let currentPositionArr: number[];\r\n    let newPositionArr: number[] = [];\r\n    let step = this.model.getStep();\r\n    let min = this.model.getMin();\r\n\r\n    currentPositionArr = viewArr.map((v) => v.getThumbCurrentPosition());\r\n\r\n    if (viewArr[0].isActive && movement >= currentPositionArr[1] - step) {\r\n      movement = currentPositionArr[1] - step;\r\n    } else if (\r\n      viewArr[1].isActive &&\r\n      movement <= currentPositionArr[0] + step\r\n    ) {\r\n      movement = currentPositionArr[0] + step;\r\n    }\r\n\r\n    newPositionArr = viewArr[0].isActive\r\n      ? [movement, currentPositionArr[1]]\r\n      : [currentPositionArr[0], movement];\r\n\r\n    return newPositionArr;\r\n  }\r\n\r\n  public ExternalAddOnChangeListener(handler: Function): void {\r\n    this.eventDispatcher.addEventListener((event: IChangeEvent) => {\r\n      handler();\r\n    });\r\n  }\r\n  private stopDrag(): void {\r\n    this.model.disableDrag();\r\n    this.removeDraggingThumbClass();\r\n    document.removeEventListener(\"mousemove\", this.dragBound);\r\n    document.removeEventListener(\"touchmove\", this.dragBound);\r\n    document.removeEventListener(\"mouseup\", this.stopDragBound);\r\n    document.removeEventListener(\"touchend\", this.stopDragBound);\r\n\r\n    this.eventDispatcher.dispatchEvent(this.changeEvent);\r\n  }\r\n  private countContainerMax(): number {\r\n    let max: number =\r\n      this.options.orientation === \"horizontal\"\r\n        ? this.model.getContainerWidth() - this.model.getThumbSize()\r\n        : this.model.getContainerHeight() - this.model.getThumbSize();\r\n    return max;\r\n  }\r\n  validateMinMax(pos: number): number {\r\n    const max = this.countContainerMax();\r\n    const min = this.model.getMin();\r\n    if (pos < 0) {\r\n      pos = 0;\r\n    } else if (pos > max) {\r\n      pos = max;\r\n    }\r\n    return pos;\r\n  }\r\n\r\n  validateIfStepMismatch(pos: number): number {\r\n    const max = this.countContainerMax();\r\n    return pos >= max && max % this.step !== 0 ? max % this.step : this.step;\r\n  }\r\n\r\n  public onTrackClick(clickPosition: number): void {\r\n    let pos: number | number[];\r\n    clickPosition -= this.model.getThumbSize();\r\n    clickPosition = this.validateMinMax(clickPosition);\r\n    let intersection: number = 0;\r\n\r\n    if (!Array.isArray(this.model.getPosition())) {\r\n      pos = this.setStep(clickPosition);\r\n    } else {\r\n      let posArr: number[] = this.model.getPosition() as number[];\r\n      intersection = posArr[1] - posArr[0];\r\n\r\n      if (clickPosition - posArr[0] < intersection / 2) {\r\n        pos = [this.setStep(clickPosition), posArr[1]];\r\n      } else if (clickPosition - posArr[0] > intersection / 2) {\r\n        pos = [posArr[0], this.setStep(clickPosition)];\r\n      } else {\r\n        pos = [this.setStep(clickPosition), posArr[1]];\r\n      }\r\n    }\r\n\r\n    this.updatePosition(pos);\r\n    this.mediator?.notifyFillPosition(pos);\r\n    this.notifyObservers();\r\n    this.eventDispatcher.dispatchEvent(this.changeEvent);\r\n  }\r\n\r\n  setTestActiveThumb(thumb: HTMLElement, thumbViews: ThumbView[]): void {\r\n    if (Array.isArray(thumbViews)) {\r\n      thumbViews.forEach((v) => {\r\n        if (v.getThumbElement() == thumb) {\r\n          v.isActive = true;\r\n        }\r\n      });\r\n      this.activeThumb = thumb;\r\n    }\r\n  }\r\n}\r\n","import { IFillModel } from \"../types/IModels/IFillModel\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Config } from \"../ConfigService/Config\";\r\nimport { IObserver } from \"../types/IObserver\";\r\nexport class FillModel implements IFillModel {\r\n  private fillPosition: number | number[] = 0;\r\n  private fillLength: number = 0;\r\n  private thumbSize: number = 0;\r\n  private options: IOptions;\r\n  private observers: IObserver[] = [];\r\n\r\n  constructor() {\r\n    this.options = Config.getInstance().getOptions();\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    this.thumbSize = this.options.thumbSize as number;\r\n    this.fillPosition = this.convertToFillPosition(\r\n      this.options.value as number | number[]\r\n    );\r\n    this.fillLength = this.calculateFillLength(this.fillPosition);\r\n  }\r\n  updateOptions(id: number): void {\r\n    this.options = Config.getInstanceById(id).getOptions();\r\n    this.init();\r\n  }\r\n  calculateFillLength(fillPos: number | number[]): number {\r\n    if (Array.isArray(fillPos)) {\r\n      return fillPos[1] - fillPos[0] + this.thumbSize;\r\n    } else {\r\n      const isHorizontal = this.options.orientation === \"horizontal\";\r\n      const isReversed = this.options.reversedOrder;\r\n      const containerSize = isHorizontal\r\n        ? (this.options.containerWidth as number)\r\n        : (this.options.pluginHeight as number);\r\n\r\n      if (isHorizontal && !isReversed) {\r\n        return fillPos + this.thumbSize;\r\n      } else if (isHorizontal && isReversed) {\r\n        return containerSize - fillPos;\r\n      } else if (!isHorizontal && !isReversed) {\r\n        return fillPos + this.thumbSize;\r\n      } else {\r\n        return containerSize - fillPos;\r\n      }\r\n    }\r\n  }\r\n  getFillWidth(): number {\r\n    return this.calculateFillLength(this.fillPosition);\r\n  }\r\n\r\n  getFillPosition(): number | number[] {\r\n    return this.fillPosition;\r\n  }\r\n  setFillPosition(value: number | number[]): void {\r\n    this.fillPosition = value;\r\n    this.notifyObservers();\r\n  }\r\n\r\n  addObserver(observer: IObserver): void {\r\n    this.observers.push(observer);\r\n  }\r\n  removeObserver(observer: IObserver): void {\r\n    this.observers = this.observers.filter((obs) => obs !== observer);\r\n  }\r\n  private notifyObservers(): void {\r\n    for (let observer of this.observers) {\r\n      observer.update(this.getFillPosition());\r\n    }\r\n  }\r\n  convertToFillPosition(value: number | number[]): number | number[] {\r\n    const max: number = this.options.max as number;\r\n    const min: number = this.options.min as number;\r\n    const containerSize =\r\n      this.options.orientation === \"horizontal\"\r\n        ? (this.options.containerWidth as number)\r\n        : (this.options.pluginHeight as number);\r\n\r\n    if (Array.isArray(value)) {\r\n      return value.map(\r\n        (val) => ((val - min) / (max - min)) * (containerSize as number)\r\n      );\r\n    }\r\n    const proportionValue = ((value - min) / (max - min)) * containerSize;\r\n    return proportionValue;\r\n  }\r\n}\r\n","import { IFillPresenter } from \"../types/IPresenters/IFillPresenter\";\r\nimport { IFillModel } from \"../types/IModels/IFillModel\";\r\nimport { IFillView } from \"../types/IViews/IFillView\";\r\nimport { IObserver } from \"../types/IObserver\";\r\nimport { Mediator } from \"./Mediator\";\r\n\r\nexport class FillPresenter implements IFillPresenter, IObserver {\r\n  private model: IFillModel;\r\n  private view: IFillView;\r\n  private mediator?: Mediator;\r\n\r\n  constructor(model: IFillModel, view: IFillView) {\r\n    this.model = model;\r\n    this.view = view;\r\n    this.init();\r\n  }\r\n  init(): void {\r\n    this.model.addObserver(this);\r\n  }\r\n  updateOptions(): void {\r\n    this.init();\r\n  }\r\n  update(value: number | number[]): void {\r\n    this.view.render(value, this.model.getFillWidth());\r\n  }\r\n  updateValue(value: number | number[]): void {\r\n    this.model.setFillPosition(value);\r\n  }\r\n  setMediator(mediator: Mediator): void {\r\n    if (mediator) this.mediator = mediator;\r\n  }\r\n  onThumbPositionChange(position: number | number[]): void {\r\n    this.updateValue(position);\r\n  }\r\n}\r\n","import { RangeSliderView } from \"../views/RangeSliderView\";\r\nimport { RangeSlider } from \"../models/RangeSlider\";\r\nimport { RangeSliderPresenter } from \"../presenters/RangeSliderPresenter\";\r\nimport { TrackPresenter } from \"../presenters/TrackPresenter\";\r\nimport { TrackModel } from \"../models/TrackModel\";\r\nimport { TrackView } from \"../views/TrackView\";\r\nimport { ThumbModel } from \"../models/ThumbModel\";\r\nimport { ThumbPresenter } from \"../presenters/ThumbPresenter\";\r\nimport { FillModel } from \"../models/FillModel\";\r\nimport { FillPresenter } from \"../presenters/FillPresenter\";\r\nimport { FillView } from \"../views/FillView\";\r\nimport { IOptions } from \"../types/IConfigurationService/IOptions\";\r\nimport { Config } from \"../ConfigService/Config\";\r\n\r\nimport $ from \"jquery\";\r\nfunction rangeSlider(\r\n  this: JQuery<HTMLElement>,\r\n  opts?: IOptions\r\n): JQuery<HTMLElement> {\r\n  let pluginInstance: JQuery<HTMLElement> = this;\r\n\r\n  this.each(function () {\r\n    const container = this;\r\n\r\n    const options = Config.set(container, opts).getOptions();\r\n    pluginInstance.id = options.instanceId as number;\r\n    pluginInstance.config = Config.getInstanceById(pluginInstance.id);\r\n    const id = options.instanceId as number;\r\n    const rangeSliderView = new RangeSliderView(container);\r\n    const rangeSliderModel = new RangeSlider();\r\n    const trackView = rangeSliderView.getTrackView();\r\n    const trackModel = new TrackModel();\r\n    const trackPresenter = new TrackPresenter(trackModel, trackView);\r\n    const thumbView = rangeSliderView.getThumbView();\r\n    const thumbModel = new ThumbModel();\r\n    const thumbPresenter = new ThumbPresenter(thumbModel, thumbView);\r\n    const fillView = rangeSliderView.getFillView();\r\n    const fillModel = new FillModel();\r\n    const fillPresenter = new FillPresenter(fillModel, fillView);\r\n    const rangeSliderPresenter = new RangeSliderPresenter(\r\n      rangeSliderModel,\r\n      rangeSliderView,\r\n      trackPresenter,\r\n      thumbPresenter,\r\n      fillPresenter\r\n    );\r\n    $(container).data(\"rangeSliderInstances\", {\r\n      rangeSliderPresenter,\r\n      rangeSliderView,\r\n      rangeSliderModel,\r\n      trackView,\r\n      trackModel,\r\n      trackPresenter,\r\n      thumbView,\r\n      thumbModel,\r\n      thumbPresenter,\r\n      fillView,\r\n      fillModel,\r\n      fillPresenter\r\n    });\r\n\r\n    pluginInstance.setValue = function (\r\n      value: number | number\r\n    ): JQuery<HTMLElement> {\r\n      thumbPresenter.externalSetValue(value);\r\n      return pluginInstance;\r\n    };\r\n    pluginInstance.getValue = function (): number | number[] {\r\n      const value = thumbPresenter.getValue();\r\n      return value;\r\n    };\r\n    pluginInstance.updateOptions = function (\r\n      options: IOptions\r\n    ): JQuery<HTMLElement> {\r\n      // Config.getInstance().updateOptions(options);\r\n      pluginInstance.config.updateOptionsExact(pluginInstance.config, options);\r\n      console.log(pluginInstance.config.getOptions());\r\n      update(container, id);\r\n      return pluginInstance;\r\n    };\r\n    pluginInstance.getOptions = function (): IOptions {\r\n      return Config.getInstance().getOptions();\r\n    };\r\n\r\n    pluginInstance.onChange = function (userHandler: Function): void {\r\n      thumbPresenter.ExternalAddOnChangeListener(userHandler);\r\n    };\r\n\r\n    pluginInstance.getContainer = function (): HTMLElement {\r\n      return container;\r\n    };\r\n    pluginInstance.getPluginConfig = function (): {\r\n      pluginId: number;\r\n      config: Config;\r\n    } {\r\n      const conf = Config.getConfigObjectById(id);\r\n      return conf;\r\n    };\r\n\r\n    pluginInstance.getContainerId = function (): number {\r\n      return options.instanceId as number;\r\n    };\r\n  });\r\n\r\n  return pluginInstance;\r\n}\r\n\r\nfunction update(container: HTMLElement, id: number): void {\r\n  const instances = $(container).data(\"rangeSliderInstances\");\r\n  if (instances) {\r\n    instances.trackModel.updateOptions(id);\r\n    instances.trackView.updateOptions(id);\r\n    instances.trackPresenter.updateOptions(id);\r\n    instances.thumbModel.updateOptions(id);\r\n    if (Array.isArray(instances.thumbView)) {\r\n      instances.thumbView.forEach(\r\n        (view: { updateOptions: (id: number) => void }) =>\r\n          view.updateOptions(id)\r\n      );\r\n    } else {\r\n      instances.thumbView.updateOptions(id);\r\n    }\r\n\r\n    instances.thumbPresenter.updateOptions(id);\r\n    instances.fillModel.updateOptions(id);\r\n    instances.fillView.updateOptions(id);\r\n    instances.fillPresenter.updateOptions();\r\n    instances.rangeSliderModel.updateOptions(id);\r\n    instances.rangeSliderView.updateOptions(id);\r\n    instances.rangeSliderPresenter.updateOptions(id);\r\n  }\r\n}\r\n\r\n$.fn.rangeSlider = rangeSlider;\r\n","import { ISettableOptions } from \"./types/IConfigurationService/ISettableOptions\";\r\nimport type { PropertyTypes } from \"./types/IConfigurationService/ISettableOptions\";\r\nimport type { StringKeysSettableOptions } from \"./types/IConfigurationService/ISettableOptions\";\r\nimport { forIn, values } from \"lodash\";\r\n\r\ntype propertyTypedStringOptions = PropertyTypes<StringKeysSettableOptions>;\r\n\r\nexport class Dashboard {\r\n  private dashboard: HTMLElement;\r\n  private dashboardInner!: HTMLElement;\r\n  private rangeSliderControls!: HTMLElement;\r\n  private title!: HTMLElement;\r\n  private rangeSliderForm!: HTMLFormElement;\r\n  private currentPlugin: JQuery<HTMLElement>;\r\n  private currentPluginId: number;\r\n  private pluginInstances: JQuery<HTMLElement>[];\r\n\r\n  constructor(container: HTMLElement, instances: JQuery<HTMLElement>[]) {\r\n    this.dashboard = container;\r\n    this.pluginInstances = instances;\r\n    this.currentPluginId = 1;\r\n    this.currentPlugin = this.pluginInstances[this.currentPluginId - 1];\r\n    this.init();\r\n  }\r\n\r\n  init(): void {\r\n    this.dashboardInner = document.createElement(\"div\");\r\n    this.dashboardInner.setAttribute(\"class\", \"dashboard__inner\");\r\n    this.rangeSliderControls = document.createElement(\"div\");\r\n    this.rangeSliderControls.setAttribute(\r\n      \"class\",\r\n      \"range-slider-controls controls-container-1\"\r\n    );\r\n    this.title = document.createElement(\"div\");\r\n    this.title.setAttribute(\"class\", \"range-slider-controls__title\");\r\n    this.rangeSliderForm = document.createElement(\"form\");\r\n    this.rangeSliderForm.setAttribute(\"class\", \"range-slider-controls__form\");\r\n    this.updateTitle();\r\n    this.renderForm();\r\n    this.attachFormToDashboard();\r\n    this.onFormSubmit();\r\n  }\r\n  update(): void {\r\n    this.updateTitle();\r\n    this.renderForm();\r\n  }\r\n  updateTitle(): void {\r\n    this.title.innerHTML = ` Setting plugin instance - ${this.currentPluginId}`;\r\n  }\r\n\r\n  private destroyForm(): void {\r\n    if (!(this.rangeSliderForm.innerHTML == \"\")) {\r\n      this.rangeSliderForm.innerHTML = \"\";\r\n    }\r\n  }\r\n  private renderForm(): void {\r\n    this.destroyForm();\r\n    const optsObj = this.getStringSettableOptions();\r\n\r\n    for (let [key, value] of Object.entries(optsObj)) {\r\n      let formInput: string;\r\n      let currentPluginOpts = this.currentPlugin.config.getOptions() as Record<\r\n        string,\r\n        number | string | boolean | number[] | string[]\r\n      >;\r\n      let optVal: number | string | boolean | number[] | string[];\r\n      if (key in currentPluginOpts) {\r\n        optVal = currentPluginOpts[key];\r\n      } else {\r\n        optVal = \"\";\r\n      }\r\n\r\n      let checked: string =\r\n        value == \"boolean\" && optVal == true ? \"checked\" : \"\";\r\n      if (value == \"boolean\") {\r\n        formInput = `\r\n        <div class=\"range-slider-controls__control\">\r\n          <label for=\"${key}\">${key}</label>\r\n          <input type=\"checkbox\" class=\"range-slider-controls__input\" name=\"${key}\" data-type=\"${value}\" ${checked}>\r\n          `;\r\n      } else if (key == \"orientation\" || key == \"tooltipForm\") {\r\n        value = value.toString().split(\"|\");\r\n        let selectOptions: string = \"\";\r\n\r\n        for (let i of value) {\r\n          let selected: number | string | boolean | number[] | string[] =\r\n            i == optVal ? \"selected\" : \"\";\r\n          selectOptions += `<option value=\"${i}\" ${selected}>${i}</option>`;\r\n        }\r\n        formInput = `\r\n        <div class=\"range-slider-controls__control\">\r\n            <label for=\"${key}\">${key}</label>\r\n            <select name=\"${key}\" data-type=\"${value}\"\r\n         class=\"range-slider-controls__input\">\r\n          ${selectOptions}\r\n        </div>`;\r\n      } else {\r\n        formInput = `\r\n        <div class=\"range-slider-controls__control\">\r\n            <label for=\"${key}\">${key}</label>\r\n            <input type=\"text\" name=\"${key}\" data-type=\"${value}\"\r\n         class=\"range-slider-controls__input\" value=\"${optVal}\"></div>\r\n        `;\r\n      }\r\n\r\n      this.rangeSliderForm.innerHTML += formInput;\r\n    }\r\n    this.rangeSliderForm.innerHTML += `\r\n    <div class=\"range-slider-controls__control\"><button class=\"range-slider-controls__button\"\r\n                value=\"set options\">set options</div>`;\r\n  }\r\n\r\n  private attachFormToDashboard(): void {\r\n    this.rangeSliderControls.appendChild(this.title);\r\n    this.rangeSliderControls.appendChild(this.rangeSliderForm);\r\n    this.dashboardInner.appendChild(this.rangeSliderControls);\r\n    this.dashboard.appendChild(this.dashboardInner);\r\n  }\r\n\r\n  getStringSettableOptions(): propertyTypedStringOptions {\r\n    return {\r\n      orientation: \"horizontal|vertical\",\r\n      doublePoint: \"boolean\",\r\n      trackHeight: \"number\",\r\n      trackBorder: \"boolean\",\r\n      trackBorderColor: \"string\",\r\n      max: \"number\",\r\n      min: \"number\",\r\n      thumbSize: \"number\",\r\n      value: \"number|number[]\",\r\n      ticks: \"boolean\",\r\n      tickStep: \"number\",\r\n      step: \"number\",\r\n      tooltip: \"boolean\",\r\n      label: \"boolean\",\r\n      labelString: \"string\",\r\n      valueInLabel: \"boolean\",\r\n      stringValues: \"string[]\",\r\n      reversedOrder: \"boolean\",\r\n      thumbColor: \"string\",\r\n      thumbShadow: \"boolean\",\r\n      thumbShadowColor: \"string\",\r\n      thumbBorder: \"boolean\",\r\n      thumbBorderStyle: \"string\",\r\n      thumbAnimation: \"boolean\",\r\n      trackColor: \"string\",\r\n      fillColor: \"string\",\r\n      tooltipColor: \"string\",\r\n      rulerColor: \"string\",\r\n      tickFontSize: \"number\",\r\n      tooltipForm: \"square|round\",\r\n      fill: \"boolean\",\r\n      tickBar: \"boolean\"\r\n    };\r\n  }\r\n\r\n  setCurrentPluginId(pluginId: number): void {\r\n    this.currentPluginId = pluginId;\r\n    this.setDashboardDataValue(this.currentPluginId);\r\n    this.currentPlugin = this.pluginInstances[this.currentPluginId - 1];\r\n    \r\n  }\r\n\r\n  getCurrentPluginId(): number {\r\n    return this.currentPluginId;\r\n  }\r\n\r\n  parseValueByType(\r\n    value: string | number | boolean | number[] | string[],\r\n    type: string\r\n  ): string | number | boolean | number[] | string[] {\r\n    let result: string | number | boolean | number[] | string[];\r\n    switch (type) {\r\n      case \"string\" || \"horizontal|vertical\" || \"square|round\":\r\n        result = value.toString();\r\n        break;\r\n      case \"string[]\":\r\n        const strToArr: string[] = value\r\n          .toString()\r\n          .split(\",\")\r\n          .map((str) => str.trim());\r\n        result = strToArr;\r\n        break;\r\n      case \"number|number[]\":\r\n        if (value.toString().match(/[.,]/)) {\r\n          const strToArrNum: number[] = value\r\n            .toString()\r\n            .split(/[.,]/)\r\n            .map((val) => Number(val));\r\n          result = strToArrNum;\r\n          \r\n        } else {\r\n          result = Number(value);\r\n        }\r\n        break;\r\n      case \"number\":\r\n        result = Number(value);\r\n        break;\r\n      default:\r\n        result = value;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  parseForm(\r\n    form: HTMLFormElement\r\n  ): Record<string, string | number | boolean | number[] | string[]> {\r\n    const obj: Record<string, string | number | boolean | number[] | string[]> =\r\n      {};\r\n    for (let i = 0; i < form.elements.length; i++) {\r\n      const formControl = form.elements[i];\r\n\r\n      if (\r\n        (formControl instanceof HTMLInputElement ||\r\n          formControl instanceof HTMLSelectElement) &&\r\n        !(formControl.value == \"\")\r\n      ) {\r\n        const key = formControl.name;\r\n        let value: string | number | boolean | number[] | string[];\r\n        let formControlValue: string | number | boolean | number[] | string[] =\r\n          formControl.type == \"checkbox\" &&\r\n          formControl instanceof HTMLInputElement\r\n            ? formControl.checked\r\n            : formControl.value;\r\n\r\n        value = this.parseValueByType(\r\n          formControlValue,\r\n          formControl.dataset.type as string\r\n        );\r\n       \r\n        obj[key] = value;\r\n      }\r\n    }\r\n    \r\n    return obj;\r\n  }\r\n  private onFormSubmit(): void {\r\n    this.rangeSliderForm.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n      let formDataObject: Partial<ISettableOptions> = {};\r\n      const formData = new FormData(this.rangeSliderForm);\r\n\r\n      const data = this.parseForm(this.rangeSliderForm);\r\n      formDataObject = data;\r\n\r\n      this.currentPlugin.updateOptions(formDataObject);\r\n    });\r\n  }\r\n\r\n  private setDashboardDataValue(value: number): void {\r\n    this.dashboard.dataset.value = value.toString();\r\n  }\r\n  getCurrentPlugin(): JQuery<HTMLElement> {\r\n    if (this.dashboard.dataset.value) {\r\n      return this.pluginInstances[this.currentPluginId - 1];\r\n    } else return this.pluginInstances[0];\r\n  }\r\n}\r\n","import \"./assets/styles/index.scss\";\r\nimport $ from \"jquery\";\r\nimport \"./range-slider-plugin/range-slider-plugin\";\r\nimport { IOptions } from \"./components/components\";\r\nimport { Dashboard } from \"./Dashboard\";\r\n\r\nfunction onBurgerClick(): void {\r\n  const displays = document.querySelectorAll(\".range-slider-display\");\r\n  displays.forEach((display) => {\r\n    const burger = display.querySelector(\".burger\");\r\n    const control = display.querySelector(\".range-slider-controls\");\r\n    burger?.addEventListener(\"click\", () => {\r\n      control?.classList.toggle(\"enabled\");\r\n    });\r\n  });\r\n}\r\nonBurgerClick();\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  const dashboardContainer = document.querySelector(\r\n    \".dashboard\"\r\n  ) as HTMLElement;\r\n\r\n  function plugins(): JQuery<HTMLElement>[] {\r\n    const pluginsArr: JQuery<HTMLElement>[] = [];\r\n\r\n    const plugin1 = $(\".container-1\").rangeSlider({\r\n      max: 800,\r\n      value: [100, 250],\r\n      min: 50,\r\n      step: 20,\r\n      doublePoint: true,\r\n      stringValues: [\"small\", \"medium\", \"large\", \"giant\"],\r\n      orientation: \"vertical\",\r\n      reversedOrder: true\r\n    });\r\n\r\n    const result = plugin1.getValue();\r\n\r\n    plugin1.onChange(() => {\r\n      console.log(\"работает!\");\r\n      console.log(plugin1.getValue());\r\n    });\r\n\r\n    // plugin1.updateOptions({\r\n    //   // orientation: \"horizontal\",\r\n    //   tooltipColor: \"orange\",\r\n    //   max: 1000\r\n    // });\r\n    // plugin1.setValue([50, 420]);\r\n    // plugin1.updateOptions({ tooltipColor: \"blue\" });\r\n    pluginsArr.push(plugin1);\r\n\r\n    const plugin2 = $(\".container-2\").rangeSlider({\r\n      max: 500,\r\n      min: 50,\r\n      value: [100, 250],\r\n      doublePoint: true,\r\n      thumbSize: 10,\r\n      trackHeight: 4,\r\n      tooltipForm: \"round\"\r\n    });\r\n    pluginsArr.push(plugin2);\r\n\r\n    const plugin3 = $(\".container-3\").rangeSlider({\r\n      max: 1200,\r\n      value: [320, 950],\r\n      tickStep: 200,\r\n      doublePoint: true,\r\n      thumbSize: 15,\r\n      trackHeight: 6,\r\n      tooltipColor: \"#51B7A9FF\",\r\n      fillColor: \"#51B7A9FF\",\r\n      thumbColor: \"#51B7A9FF\",\r\n      tickBar: false\r\n    });\r\n    pluginsArr.push(plugin3);\r\n\r\n    const plugin4 = $(\".container-4\").rangeSlider({\r\n      max: 1200,\r\n      value: [320, 950],\r\n      tickStep: 200,\r\n      fill: false,\r\n      doublePoint: true,\r\n      thumbSize: 20,\r\n      thumbColor: \"green\",\r\n      thumbBorder: true,\r\n      thumbBorderStyle: \"3px solid white\",\r\n      trackHeight: 5,\r\n      tooltipColor: \"green\",\r\n      trackColor: \"linear-gradient(to right, lightgreen, darkgreen)\",\r\n      labelString: \"Enjoy the slide...\",\r\n      valueInLabel: false\r\n    });\r\n    pluginsArr.push(plugin4);\r\n\r\n    const plugin5 = $(\".container-5\").rangeSlider({\r\n      max: 1200,\r\n      value: [320, 950],\r\n      tickStep: 200,\r\n      doublePoint: true,\r\n      thumbSize: 16,\r\n      trackHeight: 6,\r\n      trackColor: \"transparent\",\r\n      trackBorder: true,\r\n      trackBorderColor: \"#c7c7cf\",\r\n      thumbColor: \"linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%)\",\r\n      fillColor: \"linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%)\",\r\n      tickBar: false,\r\n      thumbBorder: true,\r\n      thumbBorderStyle: \"2px solid white\",\r\n      tooltip: false\r\n    });\r\n    pluginsArr.push(plugin5);\r\n\r\n    const plugin6 = $(\".container-6\").rangeSlider({\r\n      max: 1200,\r\n      value: 688,\r\n      trackBorder: true,\r\n      doublePoint: false,\r\n      reversedOrder: true,\r\n      thumbSize: 10,\r\n      trackHeight: 5,\r\n      trackColor: \"transparent\",\r\n      trackBorderColor: \"#CCABDAFF\",\r\n      fillColor: \"#CCABDAFF\",\r\n      tooltipColor: \"#CCABDAFF\",\r\n      thumbColor: \"#9E85A9FF\",\r\n      tickStep: 200\r\n    });\r\n    pluginsArr.push(plugin6);\r\n\r\n    const plugin7 = $(\".container-7\").rangeSlider({\r\n      max: 1200,\r\n      value: [322, 950],\r\n      tickStep: 200,\r\n      doublePoint: true,\r\n      thumbSize: 15,\r\n      trackHeight: 6,\r\n      orientation: \"vertical\",\r\n      fillColor: \"#FC887BFF\",\r\n      thumbColor: \"#FC887BFF\",\r\n      tooltipColor: \"#FC887BFF\",\r\n      tickBar: false,\r\n      tickFontSize: 14\r\n    });\r\n    pluginsArr.push(plugin7);\r\n\r\n    // onSumbitOptions(plugin1);\r\n\r\n    const plugin8 = $(\".container-8\").rangeSlider({\r\n      max: 1200,\r\n      value: [125, 950],\r\n      tickStep: 200,\r\n      doublePoint: true,\r\n      thumbSize: 15,\r\n      trackHeight: 6,\r\n      orientation: \"vertical\",\r\n      tooltipForm: \"round\"\r\n    });\r\n    pluginsArr.push(plugin8);\r\n\r\n    const plugin9 = $(\".container-9\").rangeSlider({\r\n      orientation: \"vertical\",\r\n      tickStep: 10\r\n    });\r\n    pluginsArr.push(plugin9);\r\n\r\n    return pluginsArr;\r\n  }\r\n\r\n  onModifyButtonClick();\r\n  const pluginsInstances = plugins();\r\n  const dashboard = new Dashboard(dashboardContainer, pluginsInstances);\r\n\r\n  function onModifyButtonClick(): void {\r\n    const buttons = document.querySelectorAll(\r\n      \".range-slider-display__modify-button\"\r\n    );\r\n    buttons.forEach((button) => {\r\n      button.addEventListener(\"click\", (e) => {\r\n        const target: HTMLElement = e.target as HTMLElement;\r\n        let modifyButton: HTMLElement = target.classList.contains(\r\n          \"range-slider-display__modify-button\"\r\n        )\r\n          ? target\r\n          : (target.closest(\r\n              \".range-slider-display__modify-button\"\r\n            ) as HTMLElement);\r\n\r\n        buttons.forEach((button) => {\r\n          button.classList.remove(\"active\");\r\n        });\r\n        modifyButton.classList.add(\"active\");\r\n\r\n        dashboard.setCurrentPluginId(\r\n          parseInt(modifyButton.dataset.value as string)\r\n        );\r\n        dashboard.update();\r\n      });\r\n    });\r\n  }\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkrange_slider\"] = self[\"webpackChunkrange_slider\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [913], function() { return __webpack_require__(1759); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","Config","userOptions","container","containerWidth","containerHeight","containerViewportLeft","containerViewportTop","static","instanceId","defaultOptions","orientation","min","max","value","step","trackHeight","fill","tooltip","tooltipForm","thumbSize","doublePoint","label","labelStyles","height","marginTop","marginBottom","labelString","valueInLabel","ticks","maxTicks","tickBar","tickFontSize","thumbColor","thumbShadow","thumbAnimation","trackColor","fillColor","tooltipColor","rulerColor","options","this","setAttribute","Error","instance","instances","push","getCurrentContainerProportions","getCurrentOrientationValue","getContainerSize","getPluginHeight","parseInt","getComputedStyle","width","getLabelHeight","decorateUserOptions","pluginHeight","containerProportion","updateOptions","opt","Object","assign","updateOptionsExact","config","id","pluginId","getOptions","Ruler","tickStep","constructor","getInstance","init","getCalculatedTickStep","renderRuler","setMaxTicks","getInstanceById","setMax","significantNum","removeTrailingZeros","num","significantNumTickstep","isValidPartition","validTicksSteps","getValidTickStepsArr","getFavorableTickStep","isFirstDigitPlain","getValidMultipliers","multipliers","sqrtMax","Math","sqrt","i","sort","a","b","partitions","result","isMinTickStep","tick","undefined","find","round","length","magnitudes","magnitude","newTickStep","filter","t","grade","validateIfTickStepMismatch","diff","$ruler","document","createElement","rulerPadding","style","paddingLeft","paddingRight","paddingTop","paddingBottom","$rulerTicks","reversedOrder","renderEachTick","appendChild","getRulerProportion","getEachTickPercentPos","getEachTickPixelPos","currentProportion","setEachTickStyle","position","right","bottom","left","top","tickNumber","fontSize","innerHTML","toString","setProperty","TrackView","$element","$track","ruler","parentElement","orientClass","getTrackElement","render","subtractLabelHeight","trackBorder","trackBorderColor","addPositionChangeListener","listener","addEventListener","e","getRuler","ThumbView","$thumb","$parent","$tooltip","dragging","isActive","idBuffer","draggingClass","dataset","getTooltip","applyTooltipStyle","tooltipFormClass","stringValue","applyThumbAnimatingStyles","thumbAnimationOff","applyThumbStyles","updateTooltipContent","Array","isArray","thisId","requestAnimationFrame","setOrientationPos","el","transition","thumb","thumbBorder","thumbBorderStyle","thumbShadowColor","getThumbViewId","addValueChangeListener","addStartDragListener","getThumbCurrentPosition","parseFloat","getThumbElement","getTooltipElement","FillView","$fill","parent","applyFillAnimatingStyle","fillAnimationOff","fillRender","renderHorizontal","renderVertical","marginLeft","getFillElement","RangeSliderView","$container","$pluginElement","$trackView","$label","$title","$thumbView","$trackElement","$fillView","getThumbViews","classStr","thumbs","renderLabel","valueStr","inner","textContent","applyLabelStyles","renderThumbView","forEach","view","getTrackView","getThumbView","getFillView","getContainerWidth","RangeSlider","observers","setValue","notifyObservers","getValue","addObserver","observer","removeObserver","obs","update","Mediator","trackPresenter","thumbPresenter","fillPresenter","getThumbPresenter","notifyTrackClick","clickPosition","onTrackClick","notifyThumbPositionChange","onThumbPositionChange","notifyFillPosition","updateValue","getStartPointFromTrack","getTrackStartPoint","RangeSliderPresenter","model","mediator","setMediator","updateView","thumbPos","getCurrentFillPosition","getMediator","reverse","TrackPresenter","trackModel","trackView","trackClickHandler","bind","getWidth","getHeight","MouseEvent","startPoint","getBoundingClientRect","clientX","clientY","TrackModel","setWidth","setHeight","ThumbModel","containerOrientationValue","validateStep","getContainerHeight","setContainerOrientationValue","setInitialPosition","pos","validateAscendingArr","arr","mergeWithPosition","p","val","convertToValueReversed","convertToValue","mergeWithValue","convertToPositionReversed","convertToPosition","getStep","getProportion","getThumbSize","getMin","getMax","getPosition","setPosition","convertedVal","map","proportionMax","proportionVal","reverseVal","enableDrag","isDragging","disableDrag","getObservers","getValueString","stringValues","userStrings","parts","splitArr","splitNum","stringValueArr","ranges","part","EventDispatcher","handlers","callback","dispatchEvent","event","handler","ThumbPresenter","activeThumb","dragBound","stopDragBound","isDoubleThumb","eventDispatcher","changeEvent","addDragListeners","isDouble","context","startDrag","thumbView","updatePosition","setThumbDataValue","currentVal","stringVal","getCurrentPosition","posArr","getTargetThumb","preventDefault","eventTarget","target","classList","contains","closest","removeDraggingThumbClass","getThumbs","remove","setDraggingThumbClass","add","setActiveThumb","drag","stopDrag","v","getStartPointFromMediator","obj","targetThumb","currentPosition","touches","movement","setStep","validateMinMax","newPositionArr","setDoubleThumbPosition","fillThumbWidth","externalSetValue","validateIfStepMismatch","viewArr","currentPositionArr","ExternalAddOnChangeListener","removeEventListener","countContainerMax","intersection","setTestActiveThumb","thumbViews","FillModel","fillPosition","fillLength","convertToFillPosition","calculateFillLength","fillPos","isHorizontal","isReversed","containerSize","getFillWidth","getFillPosition","setFillPosition","FillPresenter","rangeSlider","opts","pluginInstance","each","set","rangeSliderView","rangeSliderModel","thumbModel","fillView","fillModel","rangeSliderPresenter","data","console","log","onChange","userHandler","getContainer","getPluginConfig","getConfigObjectById","getContainerId","Dashboard","dashboard","dashboardInner","rangeSliderControls","title","rangeSliderForm","currentPlugin","currentPluginId","pluginInstances","updateTitle","renderForm","attachFormToDashboard","onFormSubmit","destroyForm","optsObj","getStringSettableOptions","key","entries","formInput","optVal","currentPluginOpts","split","selectOptions","setCurrentPluginId","setDashboardDataValue","getCurrentPluginId","parseValueByType","type","str","trim","match","Number","parseForm","form","elements","formControl","HTMLInputElement","HTMLSelectElement","name","formControlValue","checked","formDataObject","FormData","getCurrentPlugin","querySelectorAll","display","burger","querySelector","control","toggle","window","dashboardContainer","buttons","button","modifyButton","onModifyButtonClick","pluginsInstances","pluginsArr","plugin1","plugin2","plugin3","plugin4","plugin5","plugin6","plugin7","plugin8","plugin9","plugins","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}